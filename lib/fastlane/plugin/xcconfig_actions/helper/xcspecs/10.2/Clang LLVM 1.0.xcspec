<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<array>
	<dict>
		<key>BuiltinJambaseRuleName</key>
		<string>ProcessC</string>
		<key>Class</key>
		<string>XCCompilerSpecificationClang</string>
		<key>CommandOutputParser</key>
		<string>XCSimpleBufferedCommandOutputParser</string>
		<key>DashIFlagAcceptsHeadermaps</key>
		<string>Yes</string>
		<key>Description</key>
		<string>Apple Clang compiler</string>
		<key>ExecDescription</key>
		<string>Compile $(InputFile)</string>
		<key>ExecDescriptionForPrecompile</key>
		<string>Precompile $(InputFile)</string>
		<key>ExecPath</key>
		<string>clang</string>
		<key>FileTypes</key>
		<array>
			<string>sourcecode.c.c</string>
			<string>sourcecode.c.objc</string>
			<string>sourcecode.cpp.cpp</string>
			<string>sourcecode.cpp.objcpp</string>
			<string>sourcecode.asm</string>
		</array>
		<key>Identifier</key>
		<string>com.apple.compilers.llvm.clang.1_0</string>
		<key>IsAbstract</key>
		<string>NO</string>
		<key>MessageCategoryInfoOptions</key>
		<array>
			<string>--print-diagnostic-categories</string>
		</array>
		<key>Name</key>
		<string>Apple Clang</string>
		<key>OptionConditionFlavors</key>
		<array>
			<string>arch</string>
			<string>sdk</string>
		</array>
		<key>Options</key>
		<array>
			<dict>
				<key>CommandLineArgs</key>
				<array>
					<string>-target</string>
					<string>$(value)-$(LLVM_TARGET_TRIPLE_VENDOR)-$(LLVM_TARGET_TRIPLE_OS_VERSION)$(LLVM_TARGET_TRIPLE_SUFFIX)</string>
				</array>
				<key>Condition</key>
				<string>$(USE_LLVM_TARGET_TRIPLES_FOR_CLANG) == YES</string>
				<key>DefaultValue</key>
				<string>$(CURRENT_ARCH)</string>
				<key>Name</key>
				<string>CLANG_TARGET_TRIPLE_ARCHS</string>
				<key>Type</key>
				<string>StringList</string>
			</dict>
			<dict>
				<key>CommandLineFlag</key>
				<string>-target-variant</string>
				<key>Condition</key>
				<string>$(USE_LLVM_TARGET_TRIPLES_FOR_CLANG) == YES</string>
				<key>ConditionFlavors</key>
				<array>
					<string>arch</string>
				</array>
				<key>Name</key>
				<string>CLANG_TARGET_TRIPLE_VARIANTS</string>
				<key>Type</key>
				<string>StringList</string>
			</dict>
			<dict>
				<key>CommandLineFlag</key>
				<string>-arch</string>
				<key>Condition</key>
				<string>$(USE_LLVM_TARGET_TRIPLES_FOR_CLANG) != YES</string>
				<key>Name</key>
				<string>arch</string>
				<key>Type</key>
				<string>String</string>
			</dict>
			<dict>
				<key>CommandLinePrefixFlag</key>
				<string>-fmessage-length=</string>
				<key>DefaultValue</key>
				<string>0</string>
				<key>Name</key>
				<string>diagnostic_message_length</string>
				<key>Type</key>
				<string>String</string>
			</dict>
			<dict>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array/>
					<key>YES</key>
					<array>
						<string>-fdiagnostics-show-note-include-stack</string>
					</array>
				</dict>
				<key>DefaultValue</key>
				<string>YES</string>
				<key>Name</key>
				<string>print_note_include_stack</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
			<dict>
				<key>CommandLinePrefixFlag</key>
				<string>-fmacro-backtrace-limit=</string>
				<key>DefaultValue</key>
				<string>0</string>
				<key>Name</key>
				<string>CLANG_MACRO_BACKTRACE_LIMIT</string>
				<key>Type</key>
				<string>String</string>
			</dict>
			<dict>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array/>
					<key>YES</key>
					<array>
						<string>-fretain-comments-from-system-headers</string>
					</array>
				</dict>
				<key>DefaultValue</key>
				<string>NO</string>
				<key>Name</key>
				<string>CLANG_RETAIN_COMMENTS_FROM_SYSTEM_HEADERS</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
			<dict>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array/>
					<key>YES</key>
					<array>
						<string>-fcolor-diagnostics</string>
					</array>
				</dict>
				<key>DefaultValue</key>
				<string>$(COLOR_DIAGNOSTICS)</string>
				<key>Name</key>
				<string>CLANG_COLOR_DIAGNOSTICS</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
			<dict>
				<key>Category</key>
				<string>Language</string>
				<key>DefaultValue</key>
				<string>automatic</string>
				<key>Name</key>
				<string>GCC_INPUT_FILETYPE</string>
				<key>Type</key>
				<string>Enumeration</string>
				<key>Values</key>
				<array>
					<string>automatic</string>
					<string>sourcecode.c.c</string>
					<string>sourcecode.c.objc</string>
					<string>sourcecode.cpp.cpp</string>
					<string>sourcecode.cpp.objcpp</string>
				</array>
			</dict>
			<dict>
				<key>DefaultValue</key>
				<string>compile</string>
				<key>Name</key>
				<string>GCC_OPERATION</string>
				<key>Type</key>
				<string>Enumeration</string>
				<key>Values</key>
				<array>
					<string>compile</string>
					<string>generate-preprocessed</string>
					<string>generate-assembler</string>
					<string>precompile</string>
					<string>separate-symbols</string>
				</array>
			</dict>
			<dict>
				<key>Category</key>
				<string>Language</string>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array>
						<string>-nostdinc</string>
					</array>
					<key>YES</key>
					<array/>
				</dict>
				<key>DefaultValue</key>
				<string>YES</string>
				<key>Name</key>
				<string>GCC_USE_STANDARD_INCLUDE_SEARCHING</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
			<dict>
				<key>Category</key>
				<string>Language</string>
				<key>CommandLineArgs</key>
				<dict>
					<key>&lt;&lt;otherwise&gt;&gt;</key>
					<array>
						<string>-std=$(value)</string>
					</array>
					<key>ansi</key>
					<array>
						<string>-ansi</string>
					</array>
					<key>compiler-default</key>
					<array/>
				</dict>
				<key>DefaultValue</key>
				<string>compiler-default</string>
				<key>FileTypes</key>
				<array>
					<string>sourcecode.c.c</string>
					<string>sourcecode.c.objc</string>
				</array>
				<key>Name</key>
				<string>GCC_C_LANGUAGE_STANDARD</string>
				<key>Type</key>
				<string>Enumeration</string>
				<key>Values</key>
				<array>
					<string>ansi</string>
					<string>c89</string>
					<string>gnu89</string>
					<string>c99</string>
					<string>gnu99</string>
					<string>c11</string>
					<string>gnu11</string>
					<string>compiler-default</string>
				</array>
			</dict>
			<dict>
				<key>Category</key>
				<string>LanguageCXX</string>
				<key>CommandLineArgs</key>
				<dict>
					<key>&lt;&lt;otherwise&gt;&gt;</key>
					<array>
						<string>-std=$(value)</string>
					</array>
					<key>c++0x</key>
					<array>
						<string>-std=c++11</string>
					</array>
					<key>c++17</key>
					<array>
						<string>-std=c++1z</string>
					</array>
					<key>compiler-default</key>
					<array/>
					<key>gnu++0x</key>
					<array>
						<string>-std=gnu++11</string>
					</array>
					<key>gnu++17</key>
					<array>
						<string>-std=gnu++1z</string>
					</array>
				</dict>
				<key>DefaultValue</key>
				<string>compiler-default</string>
				<key>FileTypes</key>
				<array>
					<string>sourcecode.cpp.cpp</string>
					<string>sourcecode.cpp.objcpp</string>
				</array>
				<key>Name</key>
				<string>CLANG_CXX_LANGUAGE_STANDARD</string>
				<key>Type</key>
				<string>Enumeration</string>
				<key>Values</key>
				<array>
					<string>c++98</string>
					<string>gnu++98</string>
					<string>c++0x</string>
					<string>gnu++0x</string>
					<string>c++14</string>
					<string>gnu++14</string>
					<string>c++17</string>
					<string>gnu++17</string>
					<string>compiler-default</string>
				</array>
			</dict>
			<dict>
				<key>AdditionalLinkerArgs</key>
				<dict>
					<key>&lt;&lt;otherwise&gt;&gt;</key>
					<array>
						<string>-stdlib=$(value)</string>
					</array>
					<key>compiler-default</key>
					<array/>
				</dict>
				<key>AppearsAfter</key>
				<string>CLANG_CXX_LANGUAGE_STANDARD</string>
				<key>Category</key>
				<string>LanguageCXX</string>
				<key>CommandLineArgs</key>
				<dict>
					<key>&lt;&lt;otherwise&gt;&gt;</key>
					<array>
						<string>-stdlib=$(value)</string>
					</array>
					<key>compiler-default</key>
					<array/>
				</dict>
				<key>DefaultValue</key>
				<string>compiler-default</string>
				<key>FileTypes</key>
				<array>
					<string>sourcecode.cpp.cpp</string>
					<string>sourcecode.cpp.objcpp</string>
				</array>
				<key>Name</key>
				<string>CLANG_CXX_LIBRARY</string>
				<key>Type</key>
				<string>Enumeration</string>
				<key>Values</key>
				<array>
					<string>libstdc++</string>
					<string>libc++</string>
					<string>compiler-default</string>
				</array>
			</dict>
			<dict>
				<key>AdditionalLinkerArgs</key>
				<dict>
					<key>NO</key>
					<array/>
					<key>YES</key>
					<array>
						<string>-fobjc-arc</string>
					</array>
				</dict>
				<key>Category</key>
				<string>LanguageObjC</string>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array/>
					<key>YES</key>
					<array>
						<string>-fobjc-arc</string>
					</array>
				</dict>
				<key>DefaultValue</key>
				<string>NO</string>
				<key>FileTypes</key>
				<array>
					<string>sourcecode.c.objc</string>
					<string>sourcecode.cpp.objcpp</string>
				</array>
				<key>Name</key>
				<string>CLANG_ENABLE_OBJC_ARC</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
			<dict>
				<key>Category</key>
				<string>LanguageObjC</string>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array/>
					<key>YES</key>
					<array>
						<string>-fobjc-weak</string>
					</array>
				</dict>
				<key>DefaultValue</key>
				<string>NO</string>
				<key>FileTypes</key>
				<array>
					<string>sourcecode.c.objc</string>
					<string>sourcecode.cpp.objcpp</string>
				</array>
				<key>Name</key>
				<string>CLANG_ENABLE_OBJC_WEAK</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
			<dict>
				<key>AdditionalLinkerArgs</key>
				<dict>
					<key>NO</key>
					<array/>
					<key>YES</key>
					<array>
						<string>-fobjc-link-runtime</string>
					</array>
				</dict>
				<key>Category</key>
				<string>LanguageObjC</string>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array/>
					<key>YES</key>
					<array/>
				</dict>
				<key>DefaultValue</key>
				<string>YES</string>
				<key>FileTypes</key>
				<array>
					<string>sourcecode.c.objc</string>
					<string>sourcecode.cpp.objcpp</string>
				</array>
				<key>Name</key>
				<string>CLANG_LINK_OBJC_RUNTIME</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
			<dict>
				<key>Category</key>
				<string>LanguageModules</string>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array/>
					<key>YES</key>
					<array>
						<string>-fmodules</string>
					</array>
				</dict>
				<key>DefaultValue</key>
				<string>NO</string>
				<key>Name</key>
				<string>CLANG_ENABLE_MODULES</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
			<dict>
				<key>Category</key>
				<string>LanguageModules</string>
				<key>DefaultValue</key>
				<string>YES</string>
				<key>Description</key>
				<string>When this setting is enabled, `clang` will use the shared debug info available in `clang` modules and precompiled headers. This results in smaller build artifacts, faster compile times, and more complete debug info. This setting should only be disabled when building static libraries with debug info for distribution.</string>
				<key>DisplayName</key>
				<string>Enable Clang Module Debugging</string>
				<key>Name</key>
				<string>CLANG_ENABLE_MODULE_DEBUGGING</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
			<dict>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array/>
					<key>YES</key>
					<array>
						<string>-gmodules</string>
					</array>
				</dict>
				<key>Condition</key>
				<string>$(GCC_GENERATE_DEBUGGING_SYMBOLS) == YES  &amp;&amp;  ( $(CLANG_ENABLE_MODULES) == YES  ||  ( $(GCC_PREFIX_HEADER) != ''  &amp;&amp;  $(GCC_PRECOMPILE_PREFIX_HEADER) == YES ) )</string>
				<key>DefaultValue</key>
				<string>$(CLANG_ENABLE_MODULE_DEBUGGING)</string>
				<key>Name</key>
				<string>CLANG_DEBUG_MODULES</string>
				<key>SupportedVersionRanges</key>
				<array>
					<string>800.0.0</string>
				</array>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
			<dict>
				<key>CommandLineArgs</key>
				<dict>
					<key></key>
					<array/>
					<key>&lt;&lt;otherwise&gt;&gt;</key>
					<array>
						<string>-fmodules-cache-path=$(CLANG_MODULE_CACHE_PATH)</string>
					</array>
				</dict>
				<key>Condition</key>
				<string>$(CLANG_ENABLE_MODULES) == YES</string>
				<key>DefaultValue</key>
				<string>$(MODULE_CACHE_DIR)</string>
				<key>Name</key>
				<string>CLANG_MODULE_CACHE_PATH</string>
				<key>Type</key>
				<string>String</string>
			</dict>
			<dict>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array/>
					<key>YES</key>
					<array>
						<string>-Xclang</string>
						<string>-fmodules-local-submodule-visibility</string>
					</array>
				</dict>
				<key>Condition</key>
				<string>$(CLANG_ENABLE_MODULES) == YES</string>
				<key>DefaultValue</key>
				<string>NO</string>
				<key>Name</key>
				<string>CLANG_MODULE_LSV</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
			<dict>
				<key>Category</key>
				<string>LanguageModules</string>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array>
						<string>-fno-autolink</string>
					</array>
					<key>YES</key>
					<array/>
				</dict>
				<key>Condition</key>
				<string>$(CLANG_ENABLE_MODULES) == YES</string>
				<key>DefaultValue</key>
				<string>YES</string>
				<key>Name</key>
				<string>CLANG_MODULES_AUTOLINK</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
			<dict>
				<key>Category</key>
				<string>LanguageModules</string>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array/>
					<key>YES</key>
					<array>
						<string>-Wno-private-module</string>
					</array>
				</dict>
				<key>Condition</key>
				<string>$(CLANG_ENABLE_MODULES) == YES</string>
				<key>DefaultValue</key>
				<string>NO</string>
				<key>Name</key>
				<string>CLANG_MODULES_DISABLE_PRIVATE_WARNING</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
			<dict>
				<key>CommandLineArgs</key>
				<dict>
					<key></key>
					<array/>
					<key>&lt;&lt;otherwise&gt;&gt;</key>
					<array>
						<string>-fmodules-prune-interval=$(value)</string>
					</array>
				</dict>
				<key>Condition</key>
				<string>$(CLANG_ENABLE_MODULES) == YES</string>
				<key>DefaultValue</key>
				<string>86400</string>
				<key>Name</key>
				<string>CLANG_MODULES_PRUNE_INTERVAL</string>
				<key>Type</key>
				<string>String</string>
			</dict>
			<dict>
				<key>CommandLineArgs</key>
				<dict>
					<key></key>
					<array/>
					<key>&lt;&lt;otherwise&gt;&gt;</key>
					<array>
						<string>-fmodules-prune-after=$(value)</string>
					</array>
				</dict>
				<key>Condition</key>
				<string>$(CLANG_ENABLE_MODULES) == YES</string>
				<key>DefaultValue</key>
				<string>345600</string>
				<key>Name</key>
				<string>CLANG_MODULES_PRUNE_AFTER</string>
				<key>Type</key>
				<string>String</string>
			</dict>
			<dict>
				<key>CommandLineArgs</key>
				<array>
					<string>-fmodules-ignore-macro=$(value)</string>
				</array>
				<key>Condition</key>
				<string>$(CLANG_ENABLE_MODULES) == YES</string>
				<key>DefaultValue</key>
				<string>$(GCC_PREPROCESSOR_DEFINITIONS_NOT_USED_IN_PRECOMPS)</string>
				<key>Name</key>
				<string>CLANG_MODULES_IGNORE_MACROS</string>
				<key>Type</key>
				<string>StringList</string>
			</dict>
			<dict>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array/>
					<key>YES</key>
					<array>
						<string>-fmodules-validate-system-headers</string>
					</array>
				</dict>
				<key>Condition</key>
				<string>$(CLANG_ENABLE_MODULES) == YES</string>
				<key>DefaultValue</key>
				<string>NO</string>
				<key>Name</key>
				<string>CLANG_MODULES_VALIDATE_SYSTEM_HEADERS</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
			<dict>
				<key>CommandLineArgs</key>
				<dict>
					<key></key>
					<array/>
					<key>&lt;&lt;otherwise&gt;&gt;</key>
					<array>
						<string>-fbuild-session-file=$(value)</string>
						<string>-fmodules-validate-once-per-build-session</string>
					</array>
				</dict>
				<key>Condition</key>
				<string>$(CLANG_ENABLE_MODULES) == YES</string>
				<key>DefaultValue</key>
				<string></string>
				<key>Name</key>
				<string>CLANG_MODULES_BUILD_SESSION_FILE</string>
				<key>SupportedVersionRanges</key>
				<array>
					<string>602.0.0</string>
				</array>
				<key>Type</key>
				<string>String</string>
			</dict>
			<dict>
				<key>Category</key>
				<string>LanguageModules</string>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array>
						<string>-Wnon-modular-include-in-framework-module</string>
						<string>-Werror=non-modular-include-in-framework-module</string>
					</array>
					<key>YES</key>
					<array/>
				</dict>
				<key>Condition</key>
				<string>$(CLANG_ENABLE_MODULES) == YES</string>
				<key>DefaultValue</key>
				<string>NO</string>
				<key>Description</key>
				<string>Enabling this setting allows non-modular includes to be used from within framework modules. This is inherently unsafe, as such headers might cause duplicate definitions when used by any client that imports both the framework and the non-modular includes.</string>
				<key>DisplayName</key>
				<string>Allow Non-modular Includes In Framework Modules</string>
				<key>Name</key>
				<string>CLANG_ALLOW_NON_MODULAR_INCLUDES_IN_FRAMEWORK_MODULES</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
			<dict>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array/>
					<key>YES</key>
					<array>
						<string>-fmodule-name=$(PRODUCT_MODULE_NAME)</string>
					</array>
				</dict>
				<key>Condition</key>
				<string>$(CLANG_ENABLE_MODULES) == YES &amp;&amp; $(DEFINES_MODULE) == YES</string>
				<key>DefaultValue</key>
				<string>YES</string>
				<key>Name</key>
				<string>CLANG_ENABLE_MODULE_IMPLEMENTATION_OF</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
			<dict>
				<key>AdditionalLinkerArgs</key>
				<dict>
					<key>NO</key>
					<array/>
					<key>YES</key>
					<array>
						<string>-fapplication-extension</string>
					</array>
				</dict>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array/>
					<key>YES</key>
					<array>
						<string>-fapplication-extension</string>
					</array>
				</dict>
				<key>DefaultValue</key>
				<string>$(APPLICATION_EXTENSION_API_ONLY)</string>
				<key>Name</key>
				<string>CLANG_ENABLE_APP_EXTENSION</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
			<dict>
				<key>Category</key>
				<string>Language</string>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array/>
					<key>YES</key>
					<array>
						<string>-funsigned-char</string>
					</array>
				</dict>
				<key>DefaultValue</key>
				<string>NO</string>
				<key>Name</key>
				<string>GCC_CHAR_IS_UNSIGNED_CHAR</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
			<dict>
				<key>Category</key>
				<string>Language</string>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array>
						<string>-fno-asm</string>
					</array>
					<key>YES</key>
					<array/>
				</dict>
				<key>DefaultValue</key>
				<string>YES</string>
				<key>Name</key>
				<string>GCC_ENABLE_ASM_KEYWORD</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
			<dict>
				<key>Category</key>
				<string>Language</string>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array>
						<string>-fno-builtin</string>
					</array>
					<key>YES</key>
					<array/>
				</dict>
				<key>DefaultValue</key>
				<string>YES</string>
				<key>Name</key>
				<string>GCC_ENABLE_BUILTIN_FUNCTIONS</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
			<dict>
				<key>Category</key>
				<string>Language</string>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array>
						<string>-Wno-trigraphs</string>
					</array>
					<key>YES</key>
					<array>
						<string>-trigraphs</string>
					</array>
				</dict>
				<key>DefaultValue</key>
				<string>NO</string>
				<key>Name</key>
				<string>GCC_ENABLE_TRIGRAPHS</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
			<dict>
				<key>Category</key>
				<string>LanguageCXX</string>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array>
						<string>-fno-exceptions</string>
					</array>
					<key>YES</key>
					<array/>
				</dict>
				<key>DefaultValue</key>
				<string>YES</string>
				<key>FileTypes</key>
				<array>
					<string>sourcecode.cpp.cpp</string>
					<string>sourcecode.cpp.objcpp</string>
				</array>
				<key>Name</key>
				<string>GCC_ENABLE_CPP_EXCEPTIONS</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
			<dict>
				<key>Category</key>
				<string>LanguageCXX</string>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array>
						<string>-fno-rtti</string>
						<string>-fno-sanitize=vptr</string>
					</array>
					<key>YES</key>
					<array/>
				</dict>
				<key>DefaultValue</key>
				<string>YES</string>
				<key>FileTypes</key>
				<array>
					<string>sourcecode.cpp.cpp</string>
					<string>sourcecode.cpp.objcpp</string>
				</array>
				<key>Name</key>
				<string>GCC_ENABLE_CPP_RTTI</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
			<dict>
				<key>Category</key>
				<string>Language</string>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array/>
					<key>YES</key>
					<array>
						<string>-fpascal-strings</string>
					</array>
				</dict>
				<key>DefaultValue</key>
				<string>YES</string>
				<key>Name</key>
				<string>GCC_ENABLE_PASCAL_STRINGS</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
			<dict>
				<key>Category</key>
				<string>Language</string>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array/>
					<key>YES</key>
					<array>
						<string>-fshort-enums</string>
					</array>
				</dict>
				<key>DefaultValue</key>
				<string>NO</string>
				<key>Name</key>
				<string>GCC_SHORT_ENUMS</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
			<dict>
				<key>Category</key>
				<string>Language</string>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array>
						<string>-static</string>
					</array>
					<key>YES</key>
					<array/>
				</dict>
				<key>DefaultValue</key>
				<string>YES</string>
				<key>Name</key>
				<string>GCC_LINK_WITH_DYNAMIC_LIBRARIES</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
			<dict>
				<key>Category</key>
				<string>Language</string>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array/>
					<key>YES</key>
					<array>
						<string>-msoft-float</string>
					</array>
				</dict>
				<key>DefaultValue</key>
				<string>NO</string>
				<key>Name</key>
				<string>GCC_ENABLE_FLOATING_POINT_LIBRARY_CALLS</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
			<dict>
				<key>Category</key>
				<string>Language</string>
				<key>ConditionFlavors</key>
				<array/>
				<key>DefaultValue</key>
				<string></string>
				<key>Name</key>
				<string>GCC_PREFIX_HEADER</string>
				<key>Type</key>
				<string>String</string>
			</dict>
			<dict>
				<key>Category</key>
				<string>Language</string>
				<key>ConditionFlavors</key>
				<array/>
				<key>DefaultValue</key>
				<string>NO</string>
				<key>Name</key>
				<string>GCC_PRECOMPILE_PREFIX_HEADER</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
			<dict>
				<key>Category</key>
				<string>Language</string>
				<key>ConditionFlavors</key>
				<array/>
				<key>DefaultValue</key>
				<string>NO</string>
				<key>Name</key>
				<string>GCC_INCREASE_PRECOMPILED_HEADER_SHARING</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
			<dict>
				<key>Category</key>
				<string>CustomFlags</string>
				<key>FileTypes</key>
				<array>
					<string>sourcecode.c.c</string>
					<string>sourcecode.c.objc</string>
				</array>
				<key>Name</key>
				<string>OTHER_CFLAGS</string>
				<key>Type</key>
				<string>StringList</string>
			</dict>
			<dict>
				<key>Category</key>
				<string>CustomFlags</string>
				<key>FileTypes</key>
				<array>
					<string>sourcecode.cpp.cpp</string>
					<string>sourcecode.cpp.objcpp</string>
				</array>
				<key>Name</key>
				<string>OTHER_CPLUSPLUSFLAGS</string>
				<key>Type</key>
				<string>StringList</string>
			</dict>
			<dict>
				<key>Category</key>
				<string>CodeGeneration</string>
				<key>DefaultValue</key>
				<string>YES</string>
				<key>Name</key>
				<string>GCC_GENERATE_DEBUGGING_SYMBOLS</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
			<dict>
				<key>Category</key>
				<string>CodeGeneration</string>
				<key>CommandLineArgs</key>
				<array>
					<string>-O$(value)</string>
				</array>
				<key>DefaultValue</key>
				<string>s</string>
				<key>Name</key>
				<string>GCC_OPTIMIZATION_LEVEL</string>
				<key>Type</key>
				<string>Enumeration</string>
				<key>Values</key>
				<array>
					<string>0</string>
					<string>1</string>
					<string>2</string>
					<string>3</string>
					<string>s</string>
					<string>fast</string>
				</array>
			</dict>
			<dict>
				<key>DefaultValue</key>
				<string>NO</string>
				<key>Name</key>
				<string>LLVM_OPTIMIZATION_LEVEL_VAL_0</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
			<dict>
				<key>DefaultValue</key>
				<string>NO</string>
				<key>Name</key>
				<string>LLVM_OPTIMIZATION_LEVEL_VAL_1</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
			<dict>
				<key>DefaultValue</key>
				<string>NO</string>
				<key>Name</key>
				<string>LLVM_OPTIMIZATION_LEVEL_VAL_2</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
			<dict>
				<key>DefaultValue</key>
				<string>NO</string>
				<key>Name</key>
				<string>LLVM_OPTIMIZATION_LEVEL_VAL_3</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
			<dict>
				<key>DefaultValue</key>
				<string>NO</string>
				<key>Name</key>
				<string>LLVM_OPTIMIZATION_LEVEL_VAL_s</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
			<dict>
				<key>DefaultValue</key>
				<string>YES</string>
				<key>Name</key>
				<string>LLVM_OPTIMIZATION_LEVEL_VAL_fast</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
			<dict>
				<key>DefaultValue</key>
				<string>$(LLVM_OPTIMIZATION_LEVEL_VAL_$(GCC_OPTIMIZATION_LEVEL))</string>
				<key>Name</key>
				<string>LLVM_IMPLICIT_AGGRESSIVE_OPTIMIZATIONS</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
			<dict>
				<key>AdditionalLinkerArgs</key>
				<dict>
					<key>NO</key>
					<array/>
					<key>YES_THIN</key>
					<array>
						<string>-flto=thin</string>
						<string>-Xlinker</string>
						<string>-cache_path_lto</string>
						<string>-Xlinker</string>
						<string>$(OBJROOT)/LTOCache</string>
					</array>
				</dict>
				<key>Category</key>
				<string>CodeGeneration</string>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array/>
					<key>YES</key>
					<array>
						<string>-flto</string>
					</array>
					<key>YES_THIN</key>
					<array>
						<string>-flto=thin</string>
					</array>
				</dict>
				<key>DefaultValue</key>
				<string>NO</string>
				<key>Name</key>
				<string>LLVM_LTO</string>
				<key>Type</key>
				<string>Enumeration</string>
				<key>Values</key>
				<array>
					<string>YES</string>
					<string>YES_THIN</string>
					<string>NO</string>
				</array>
			</dict>
			<dict>
				<key>Category</key>
				<string>CodeGeneration</string>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array/>
					<key>YES</key>
					<array>
						<string>-fno-common</string>
					</array>
				</dict>
				<key>DefaultValue</key>
				<string>NO</string>
				<key>Name</key>
				<string>GCC_NO_COMMON_BLOCKS</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
			<dict>
				<key>Category</key>
				<string>CodeGeneration</string>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array>
						<string>-fwritable-strings</string>
					</array>
					<key>YES</key>
					<array/>
				</dict>
				<key>DefaultValue</key>
				<string>YES</string>
				<key>Name</key>
				<string>GCC_REUSE_STRINGS</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
			<dict>
				<key>Category</key>
				<string>CodeGeneration</string>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array/>
					<key>YES</key>
					<array>
						<string>-mdynamic-no-pic</string>
					</array>
				</dict>
				<key>DefaultValue</key>
				<string>NO</string>
				<key>Name</key>
				<string>GCC_DYNAMIC_NO_PIC</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
			<dict>
				<key>Category</key>
				<string>CodeGeneration</string>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array/>
					<key>YES</key>
					<array>
						<string>-mkernel</string>
					</array>
				</dict>
				<key>DefaultValue</key>
				<string>NO</string>
				<key>Name</key>
				<string>GCC_ENABLE_KERNEL_DEVELOPMENT</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
			<dict>
				<key>Category</key>
				<string>WarningsPolicy</string>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array/>
					<key>YES</key>
					<array>
						<string>-Werror</string>
					</array>
				</dict>
				<key>DefaultValue</key>
				<string>NO</string>
				<key>Name</key>
				<string>GCC_TREAT_WARNINGS_AS_ERRORS</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
			<dict>
				<key>AppearsAfter</key>
				<string>GCC_TREAT_WARNINGS_AS_ERRORS</string>
				<key>Category</key>
				<string>Warnings</string>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array/>
					<key>YES</key>
					<array>
						<string>-Werror=implicit-function-declaration</string>
					</array>
				</dict>
				<key>DefaultValue</key>
				<string>NO</string>
				<key>FileTypes</key>
				<array>
					<string>sourcecode.c.c</string>
					<string>sourcecode.c.objc</string>
				</array>
				<key>Name</key>
				<string>GCC_TREAT_IMPLICIT_FUNCTION_DECLARATIONS_AS_ERRORS</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
			<dict>
				<key>AppearsAfter</key>
				<string>GCC_TREAT_WARNINGS_AS_ERRORS</string>
				<key>Category</key>
				<string>Warnings</string>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array/>
					<key>YES</key>
					<array>
						<string>-Werror=incompatible-pointer-types</string>
					</array>
				</dict>
				<key>DefaultValue</key>
				<string>NO</string>
				<key>Name</key>
				<string>GCC_TREAT_INCOMPATIBLE_POINTER_TYPE_WARNINGS_AS_ERRORS</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
			<dict>
				<key>Category</key>
				<string>Warnings</string>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array>
						<string>-Wno-missing-field-initializers</string>
					</array>
					<key>YES</key>
					<array>
						<string>-Wmissing-field-initializers</string>
					</array>
				</dict>
				<key>DefaultValue</key>
				<string>NO</string>
				<key>Name</key>
				<string>GCC_WARN_ABOUT_MISSING_FIELD_INITIALIZERS</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
			<dict>
				<key>Category</key>
				<string>Warnings</string>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array>
						<string>-Wno-missing-prototypes</string>
					</array>
					<key>YES</key>
					<array>
						<string>-Wmissing-prototypes</string>
					</array>
				</dict>
				<key>DefaultValue</key>
				<string>NO</string>
				<key>Name</key>
				<string>GCC_WARN_ABOUT_MISSING_PROTOTYPES</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
			<dict>
				<key>Category</key>
				<string>Warnings</string>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array>
						<string>-Wno-return-type</string>
					</array>
					<key>YES</key>
					<array/>
					<key>YES_ERROR</key>
					<array>
						<string>-Werror=return-type</string>
					</array>
				</dict>
				<key>DefaultValue</key>
				<string>NO</string>
				<key>Name</key>
				<string>GCC_WARN_ABOUT_RETURN_TYPE</string>
				<key>Type</key>
				<string>Enumeration</string>
				<key>Values</key>
				<array>
					<string>YES</string>
					<string>NO</string>
					<string>YES_ERROR</string>
				</array>
			</dict>
			<dict>
				<key>Category</key>
				<string>Warnings</string>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array/>
					<key>YES</key>
					<array>
						<string>-Wdocumentation</string>
					</array>
				</dict>
				<key>DefaultValue</key>
				<string>NO</string>
				<key>Name</key>
				<string>CLANG_WARN_DOCUMENTATION_COMMENTS</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
			<dict>
				<key>Category</key>
				<string>Warnings</string>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array/>
					<key>YES</key>
					<array>
						<string>-Wunreachable-code</string>
					</array>
					<key>YES_AGGRESSIVE</key>
					<array>
						<string>-Wunreachable-code-aggressive</string>
					</array>
				</dict>
				<key>DefaultValue</key>
				<string>NO</string>
				<key>Name</key>
				<string>CLANG_WARN_UNREACHABLE_CODE</string>
				<key>Type</key>
				<string>Enumeration</string>
				<key>Values</key>
				<array>
					<string>YES</string>
					<string>YES_AGGRESSIVE</string>
					<string>NO</string>
				</array>
			</dict>
			<dict>
				<key>Category</key>
				<string>Warnings</string>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array/>
					<key>YES</key>
					<array>
						<string>-Wquoted-include-in-framework-header</string>
					</array>
					<key>YES_ERROR</key>
					<array>
						<string>-Wquoted-include-in-framework-header</string>
						<string>-Werror=quoted-include-in-framework-header</string>
					</array>
				</dict>
				<key>DefaultValue</key>
				<string>NO</string>
				<key>Name</key>
				<string>CLANG_WARN_QUOTED_INCLUDE_IN_FRAMEWORK_HEADER</string>
				<key>Type</key>
				<string>Enumeration</string>
				<key>Values</key>
				<array>
					<string>YES</string>
					<string>YES_ERROR</string>
					<string>NO</string>
				</array>
			</dict>
			<dict>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array/>
					<key>YES</key>
					<array>
						<string>-Wnullable-to-nonnull-conversion</string>
					</array>
				</dict>
				<key>DefaultValue</key>
				<string>NO</string>
				<key>Name</key>
				<string>CLANG_WARN_NULLABLE_TO_NONNULL_CONVERSION</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
			<dict>
				<key>Category</key>
				<string>WarningsObjC</string>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array>
						<string>-Wno-implicit-atomic-properties</string>
					</array>
					<key>YES</key>
					<array>
						<string>-Wimplicit-atomic-properties</string>
					</array>
				</dict>
				<key>DefaultValue</key>
				<string>NO</string>
				<key>FileTypes</key>
				<array>
					<string>sourcecode.c.objc</string>
					<string>sourcecode.cpp.objcpp</string>
				</array>
				<key>Name</key>
				<string>CLANG_WARN_OBJC_IMPLICIT_ATOMIC_PROPERTIES</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
			<dict>
				<key>Category</key>
				<string>WarningsObjC</string>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array>
						<string>-Wno-deprecated-objc-isa-usage</string>
					</array>
					<key>YES</key>
					<array/>
					<key>YES_ERROR</key>
					<array>
						<string>-Werror=deprecated-objc-isa-usage</string>
					</array>
				</dict>
				<key>DefaultValue</key>
				<string>YES</string>
				<key>Name</key>
				<string>CLANG_WARN_DIRECT_OBJC_ISA_USAGE</string>
				<key>Type</key>
				<string>Enumeration</string>
				<key>Values</key>
				<array>
					<string>YES</string>
					<string>NO</string>
					<string>YES_ERROR</string>
				</array>
			</dict>
			<dict>
				<key>Category</key>
				<string>WarningsObjC</string>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array>
						<string>-Wno-objc-interface-ivars</string>
					</array>
					<key>YES</key>
					<array>
						<string>-Wobjc-interface-ivars</string>
					</array>
					<key>YES_ERROR</key>
					<array>
						<string>-Werror=objc-interface-ivars</string>
					</array>
				</dict>
				<key>DefaultValue</key>
				<string>NO</string>
				<key>FileTypes</key>
				<array>
					<string>sourcecode.c.objc</string>
					<string>sourcecode.cpp.objcpp</string>
				</array>
				<key>Name</key>
				<string>CLANG_WARN_OBJC_INTERFACE_IVARS</string>
				<key>Type</key>
				<string>Enumeration</string>
				<key>Values</key>
				<array>
					<string>NO</string>
					<string>YES</string>
					<string>YES_ERROR</string>
				</array>
			</dict>
			<dict>
				<key>Category</key>
				<string>WarningsObjC</string>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array/>
					<key>YES</key>
					<array>
						<string>-Wobjc-missing-property-synthesis</string>
					</array>
				</dict>
				<key>DefaultValue</key>
				<string>NO</string>
				<key>FileTypes</key>
				<array>
					<string>sourcecode.c.objc</string>
					<string>sourcecode.cpp.objcpp</string>
				</array>
				<key>Name</key>
				<string>CLANG_WARN_OBJC_MISSING_PROPERTY_SYNTHESIS</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
			<dict>
				<key>Category</key>
				<string>WarningsObjC</string>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array>
						<string>-Wno-objc-root-class</string>
					</array>
					<key>YES</key>
					<array/>
					<key>YES_ERROR</key>
					<array>
						<string>-Werror=objc-root-class</string>
					</array>
				</dict>
				<key>DefaultValue</key>
				<string>YES</string>
				<key>Name</key>
				<string>CLANG_WARN_OBJC_ROOT_CLASS</string>
				<key>Type</key>
				<string>Enumeration</string>
				<key>Values</key>
				<array>
					<string>YES</string>
					<string>NO</string>
					<string>YES_ERROR</string>
				</array>
			</dict>
			<dict>
				<key>Category</key>
				<string>WarningsObjCARC</string>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array>
						<string>-Wno-arc-repeated-use-of-weak</string>
					</array>
					<key>YES</key>
					<array>
						<string>-Warc-repeated-use-of-weak</string>
						<string>-Wno-arc-maybe-repeated-use-of-weak</string>
					</array>
					<key>YES_AGGRESSIVE</key>
					<array>
						<string>-Warc-repeated-use-of-weak</string>
						<string>-Warc-maybe-repeated-use-of-weak</string>
					</array>
				</dict>
				<key>DefaultValue</key>
				<string>NO</string>
				<key>FileTypes</key>
				<array>
					<string>sourcecode.c.objc</string>
					<string>sourcecode.cpp.objcpp</string>
				</array>
				<key>Name</key>
				<string>CLANG_WARN_OBJC_REPEATED_USE_OF_WEAK</string>
				<key>Type</key>
				<string>Enumeration</string>
				<key>Values</key>
				<array>
					<string>YES</string>
					<string>NO</string>
					<string>YES_AGGRESSIVE</string>
				</array>
			</dict>
			<dict>
				<key>Category</key>
				<string>WarningsObjCARC</string>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array/>
					<key>YES</key>
					<array>
						<string>-Wexplicit-ownership-type</string>
					</array>
				</dict>
				<key>DefaultValue</key>
				<string>NO</string>
				<key>FileTypes</key>
				<array>
					<string>sourcecode.c.objc</string>
					<string>sourcecode.cpp.objcpp</string>
				</array>
				<key>Name</key>
				<string>CLANG_WARN_OBJC_EXPLICIT_OWNERSHIP_TYPE</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
			<dict>
				<key>Category</key>
				<string>WarningsObjCARC</string>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array/>
					<key>YES</key>
					<array>
						<string>-Wimplicit-retain-self</string>
					</array>
				</dict>
				<key>DefaultValue</key>
				<string>NO</string>
				<key>FileTypes</key>
				<array>
					<string>sourcecode.c.objc</string>
					<string>sourcecode.cpp.objcpp</string>
				</array>
				<key>Name</key>
				<string>CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
			<dict>
				<key>Category</key>
				<string>WarningsCXX</string>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array>
						<string>-Wno-non-virtual-dtor</string>
					</array>
					<key>YES</key>
					<array>
						<string>-Wnon-virtual-dtor</string>
					</array>
				</dict>
				<key>DefaultValue</key>
				<string>NO</string>
				<key>FileTypes</key>
				<array>
					<string>sourcecode.cpp.cpp</string>
					<string>sourcecode.cpp.objcpp</string>
				</array>
				<key>Name</key>
				<string>GCC_WARN_NON_VIRTUAL_DESTRUCTOR</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
			<dict>
				<key>Category</key>
				<string>WarningsCXX</string>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array>
						<string>-Wno-overloaded-virtual</string>
					</array>
					<key>YES</key>
					<array>
						<string>-Woverloaded-virtual</string>
					</array>
				</dict>
				<key>DefaultValue</key>
				<string>NO</string>
				<key>FileTypes</key>
				<array>
					<string>sourcecode.cpp.cpp</string>
					<string>sourcecode.cpp.objcpp</string>
				</array>
				<key>Name</key>
				<string>GCC_WARN_HIDDEN_VIRTUAL_FUNCTIONS</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
			<dict>
				<key>Category</key>
				<string>WarningsCXX</string>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array>
						<string>-Wno-exit-time-destructors</string>
					</array>
					<key>YES</key>
					<array>
						<string>-Wexit-time-destructors</string>
					</array>
				</dict>
				<key>DefaultValue</key>
				<string>NO</string>
				<key>FileTypes</key>
				<array>
					<string>sourcecode.cpp.cpp</string>
					<string>sourcecode.cpp.objcpp</string>
				</array>
				<key>Name</key>
				<string>CLANG_WARN__EXIT_TIME_DESTRUCTORS</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
			<dict>
				<key>Category</key>
				<string>WarningsObjCARC</string>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array>
						<string>-Wno-arc-bridge-casts-disallowed-in-nonarc</string>
					</array>
					<key>YES</key>
					<array/>
				</dict>
				<key>DefaultValue</key>
				<string>YES</string>
				<key>FileTypes</key>
				<array>
					<string>sourcecode.c.objc</string>
					<string>sourcecode.cpp.objcpp</string>
				</array>
				<key>Name</key>
				<string>CLANG_WARN__ARC_BRIDGE_CAST_NONARC</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
			<dict>
				<key>Category</key>
				<string>WarningsObjC</string>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array/>
					<key>YES</key>
					<array>
						<string>-Wduplicate-method-match</string>
					</array>
				</dict>
				<key>DefaultValue</key>
				<string>NO</string>
				<key>FileTypes</key>
				<array>
					<string>sourcecode.c.objc</string>
					<string>sourcecode.cpp.objcpp</string>
				</array>
				<key>Name</key>
				<string>CLANG_WARN__DUPLICATE_METHOD_MATCH</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
			<dict>
				<key>Category</key>
				<string>Warnings</string>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array>
						<string>-Wno-format</string>
					</array>
					<key>YES</key>
					<array/>
				</dict>
				<key>DefaultValue</key>
				<string>YES</string>
				<key>Name</key>
				<string>GCC_WARN_TYPECHECK_CALLS_TO_PRINTF</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
			<dict>
				<key>Category</key>
				<string>Warnings</string>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array>
						<string>-Wno-missing-braces</string>
					</array>
					<key>YES</key>
					<array>
						<string>-Wmissing-braces</string>
					</array>
				</dict>
				<key>DefaultValue</key>
				<string>NO</string>
				<key>Name</key>
				<string>GCC_WARN_INITIALIZER_NOT_FULLY_BRACKETED</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
			<dict>
				<key>Category</key>
				<string>Warnings</string>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array>
						<string>-Wno-parentheses</string>
					</array>
					<key>YES</key>
					<array>
						<string>-Wparentheses</string>
					</array>
				</dict>
				<key>DefaultValue</key>
				<string>YES</string>
				<key>Name</key>
				<string>GCC_WARN_MISSING_PARENTHESES</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
			<dict>
				<key>Category</key>
				<string>Warnings</string>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array>
						<string>-Wno-switch</string>
					</array>
					<key>YES</key>
					<array>
						<string>-Wswitch</string>
					</array>
				</dict>
				<key>DefaultValue</key>
				<string>YES</string>
				<key>Name</key>
				<string>GCC_WARN_CHECK_SWITCH_STATEMENTS</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
			<dict>
				<key>Category</key>
				<string>Warnings</string>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array>
						<string>-Wno-unused-function</string>
					</array>
					<key>YES</key>
					<array>
						<string>-Wunused-function</string>
					</array>
				</dict>
				<key>DefaultValue</key>
				<string>NO</string>
				<key>Name</key>
				<string>GCC_WARN_UNUSED_FUNCTION</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
			<dict>
				<key>Category</key>
				<string>Warnings</string>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array>
						<string>-Wno-unused-label</string>
					</array>
					<key>YES</key>
					<array>
						<string>-Wunused-label</string>
					</array>
				</dict>
				<key>DefaultValue</key>
				<string>NO</string>
				<key>Name</key>
				<string>GCC_WARN_UNUSED_LABEL</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
			<dict>
				<key>Category</key>
				<string>Warnings</string>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array>
						<string>-Wno-empty-body</string>
					</array>
					<key>YES</key>
					<array>
						<string>-Wempty-body</string>
					</array>
				</dict>
				<key>DefaultValue</key>
				<string>NO</string>
				<key>Name</key>
				<string>CLANG_WARN_EMPTY_BODY</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
			<dict>
				<key>Category</key>
				<string>Warnings</string>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array>
						<string>-Wno-uninitialized</string>
					</array>
					<key>YES</key>
					<array>
						<string>-Wuninitialized</string>
					</array>
					<key>YES_AGGRESSIVE</key>
					<array>
						<string>-Wuninitialized</string>
						<string>-Wconditional-uninitialized</string>
					</array>
				</dict>
				<key>DefaultValue</key>
				<string>NO</string>
				<key>Name</key>
				<string>GCC_WARN_UNINITIALIZED_AUTOS</string>
				<key>Type</key>
				<string>Enumeration</string>
				<key>Values</key>
				<array>
					<string>YES</string>
					<string>YES_AGGRESSIVE</string>
					<string>NO</string>
				</array>
			</dict>
			<dict>
				<key>Category</key>
				<string>Warnings</string>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array>
						<string>-Wno-unknown-pragmas</string>
					</array>
					<key>YES</key>
					<array>
						<string>-Wunknown-pragmas</string>
					</array>
				</dict>
				<key>DefaultValue</key>
				<string>NO</string>
				<key>Name</key>
				<string>GCC_WARN_UNKNOWN_PRAGMAS</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
			<dict>
				<key>Category</key>
				<string>WarningsPolicy</string>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array/>
					<key>YES</key>
					<array>
						<string>-w</string>
					</array>
				</dict>
				<key>DefaultValue</key>
				<string>NO</string>
				<key>Name</key>
				<string>GCC_WARN_INHIBIT_ALL_WARNINGS</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
			<dict>
				<key>Category</key>
				<string>WarningsPolicy</string>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array/>
					<key>YES</key>
					<array>
						<string>-pedantic</string>
					</array>
				</dict>
				<key>DefaultValue</key>
				<string>NO</string>
				<key>Name</key>
				<string>GCC_WARN_PEDANTIC</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
			<dict>
				<key>Category</key>
				<string>Warnings</string>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array>
						<string>-Wno-shadow</string>
					</array>
					<key>YES</key>
					<array>
						<string>-Wshadow</string>
					</array>
				</dict>
				<key>DefaultValue</key>
				<string>NO</string>
				<key>Name</key>
				<string>GCC_WARN_SHADOW</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
			<dict>
				<key>Category</key>
				<string>Warnings</string>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array>
						<string>-Wno-four-char-constants</string>
					</array>
					<key>YES</key>
					<array>
						<string>-Wfour-char-constants</string>
					</array>
				</dict>
				<key>DefaultValue</key>
				<string>NO</string>
				<key>Name</key>
				<string>GCC_WARN_FOUR_CHARACTER_CONSTANTS</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
			<dict>
				<key>Category</key>
				<string>Warnings</string>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array>
						<string>-Wno-conversion</string>
					</array>
					<key>YES</key>
					<array>
						<string>-Wconversion</string>
					</array>
					<key>YES_ERROR</key>
					<array>
						<string>-Werror=conversion</string>
					</array>
				</dict>
				<key>CommonOption</key>
				<string>NO</string>
				<key>DefaultValue</key>
				<string>NO</string>
				<key>Name</key>
				<string>CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION</string>
				<key>Type</key>
				<string>Enumeration</string>
				<key>Values</key>
				<array>
					<string>YES</string>
					<string>YES_ERROR</string>
					<string>NO</string>
				</array>
			</dict>
			<dict>
				<key>Category</key>
				<string>Warnings</string>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array>
						<string>-Wno-constant-conversion</string>
					</array>
					<key>YES</key>
					<array>
						<string>-Wconstant-conversion</string>
					</array>
					<key>YES_ERROR</key>
					<array>
						<string>-Werror=constant-conversion</string>
					</array>
				</dict>
				<key>DefaultValue</key>
				<string>$(CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION)</string>
				<key>Name</key>
				<string>CLANG_WARN_CONSTANT_CONVERSION</string>
				<key>Type</key>
				<string>Enumeration</string>
				<key>Values</key>
				<array>
					<string>YES</string>
					<string>YES_ERROR</string>
					<string>NO</string>
				</array>
			</dict>
			<dict>
				<key>Category</key>
				<string>Warnings</string>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array>
						<string>-Wno-int-conversion</string>
					</array>
					<key>YES</key>
					<array>
						<string>-Wint-conversion</string>
					</array>
					<key>YES_ERROR</key>
					<array>
						<string>-Werror=int-conversion</string>
					</array>
				</dict>
				<key>DefaultValue</key>
				<string>$(CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION)</string>
				<key>Name</key>
				<string>CLANG_WARN_INT_CONVERSION</string>
				<key>Type</key>
				<string>Enumeration</string>
				<key>Values</key>
				<array>
					<string>YES</string>
					<string>YES_ERROR</string>
					<string>NO</string>
				</array>
			</dict>
			<dict>
				<key>Category</key>
				<string>Warnings</string>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array>
						<string>-Wno-bool-conversion</string>
					</array>
					<key>YES</key>
					<array>
						<string>-Wbool-conversion</string>
					</array>
					<key>YES_ERROR</key>
					<array>
						<string>-Werror=bool-conversion</string>
					</array>
				</dict>
				<key>DefaultValue</key>
				<string>$(CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION)</string>
				<key>Name</key>
				<string>CLANG_WARN_BOOL_CONVERSION</string>
				<key>Type</key>
				<string>Enumeration</string>
				<key>Values</key>
				<array>
					<string>YES</string>
					<string>YES_ERROR</string>
					<string>NO</string>
				</array>
			</dict>
			<dict>
				<key>Category</key>
				<string>Warnings</string>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array>
						<string>-Wno-enum-conversion</string>
					</array>
					<key>YES</key>
					<array>
						<string>-Wenum-conversion</string>
					</array>
					<key>YES_ERROR</key>
					<array>
						<string>-Werror=enum-conversion</string>
					</array>
				</dict>
				<key>DefaultValue</key>
				<string>$(CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION)</string>
				<key>Name</key>
				<string>CLANG_WARN_ENUM_CONVERSION</string>
				<key>Type</key>
				<string>Enumeration</string>
				<key>Values</key>
				<array>
					<string>YES</string>
					<string>YES_ERROR</string>
					<string>NO</string>
				</array>
			</dict>
			<dict>
				<key>Category</key>
				<string>Warnings</string>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array>
						<string>-Wno-float-conversion</string>
					</array>
					<key>YES</key>
					<array>
						<string>-Wfloat-conversion</string>
					</array>
					<key>YES_ERROR</key>
					<array>
						<string>-Werror=float-conversion</string>
					</array>
				</dict>
				<key>DefaultValue</key>
				<string>$(CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION)</string>
				<key>Name</key>
				<string>CLANG_WARN_FLOAT_CONVERSION</string>
				<key>Type</key>
				<string>Enumeration</string>
				<key>Values</key>
				<array>
					<string>YES</string>
					<string>YES_ERROR</string>
					<string>NO</string>
				</array>
			</dict>
			<dict>
				<key>Category</key>
				<string>Warnings</string>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array>
						<string>-Wno-non-literal-null-conversion</string>
					</array>
					<key>YES</key>
					<array>
						<string>-Wnon-literal-null-conversion</string>
					</array>
					<key>YES_ERROR</key>
					<array>
						<string>-Werror=non-literal-null-conversion</string>
					</array>
				</dict>
				<key>DefaultValue</key>
				<string>$(CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION)</string>
				<key>Name</key>
				<string>CLANG_WARN_NON_LITERAL_NULL_CONVERSION</string>
				<key>Type</key>
				<string>Enumeration</string>
				<key>Values</key>
				<array>
					<string>YES</string>
					<string>YES_ERROR</string>
					<string>NO</string>
				</array>
			</dict>
			<dict>
				<key>Category</key>
				<string>WarningsObjC</string>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array>
						<string>-Wno-objc-literal-conversion</string>
					</array>
					<key>YES</key>
					<array>
						<string>-Wobjc-literal-conversion</string>
					</array>
					<key>YES_ERROR</key>
					<array>
						<string>-Werror=objc-literal-conversion</string>
					</array>
				</dict>
				<key>DefaultValue</key>
				<string>$(CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION)</string>
				<key>Name</key>
				<string>CLANG_WARN_OBJC_LITERAL_CONVERSION</string>
				<key>Type</key>
				<string>Enumeration</string>
				<key>Values</key>
				<array>
					<string>YES</string>
					<string>YES_ERROR</string>
					<string>NO</string>
				</array>
			</dict>
			<dict>
				<key>Category</key>
				<string>WarningsObjC</string>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array>
						<string>-Wno-missing-noescape</string>
					</array>
					<key>YES</key>
					<array/>
					<key>YES_ERROR</key>
					<array>
						<string>-Werror=missing-noescape</string>
					</array>
				</dict>
				<key>DefaultValue</key>
				<string>YES</string>
				<key>Name</key>
				<string>CLANG_WARN_MISSING_NOESCAPE</string>
				<key>Type</key>
				<string>Enumeration</string>
				<key>Values</key>
				<array>
					<string>YES</string>
					<string>YES_ERROR</string>
					<string>NO</string>
				</array>
			</dict>
			<dict>
				<key>Category</key>
				<string>Warnings</string>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array>
						<string>-Wno-pragma-pack</string>
					</array>
					<key>YES</key>
					<array/>
					<key>YES_ERROR</key>
					<array>
						<string>-Werror=pragma-pack</string>
					</array>
				</dict>
				<key>DefaultValue</key>
				<string>YES</string>
				<key>Name</key>
				<string>CLANG_WARN_PRAGMA_PACK</string>
				<key>Type</key>
				<string>Enumeration</string>
				<key>Values</key>
				<array>
					<string>YES</string>
					<string>YES_ERROR</string>
					<string>NO</string>
				</array>
			</dict>
			<dict>
				<key>Category</key>
				<string>Warnings</string>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array>
						<string>-Wno-private-module</string>
					</array>
					<key>YES</key>
					<array/>
				</dict>
				<key>DefaultValue</key>
				<string>YES</string>
				<key>Name</key>
				<string>CLANG_WARN_PRIVATE_MODULE</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
			<dict>
				<key>Category</key>
				<string>WarningsCXX</string>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array>
						<string>-Wno-vexing-parse</string>
					</array>
					<key>YES</key>
					<array/>
					<key>YES_ERROR</key>
					<array>
						<string>-Werror=vexing-parse</string>
					</array>
				</dict>
				<key>DefaultValue</key>
				<string>YES</string>
				<key>Name</key>
				<string>CLANG_WARN_VEXING_PARSE</string>
				<key>Type</key>
				<string>Enumeration</string>
				<key>Values</key>
				<array>
					<string>YES</string>
					<string>YES_ERROR</string>
					<string>NO</string>
				</array>
			</dict>
			<dict>
				<key>Category</key>
				<string>WarningsCXX</string>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array>
						<string>-Wno-delete-non-virtual-dtor</string>
					</array>
					<key>YES</key>
					<array/>
					<key>YES_ERROR</key>
					<array>
						<string>-Werror=delete-non-virtual-dtor</string>
					</array>
				</dict>
				<key>DefaultValue</key>
				<string>YES</string>
				<key>Name</key>
				<string>CLANG_WARN_DELETE_NON_VIRTUAL_DTOR</string>
				<key>Type</key>
				<string>Enumeration</string>
				<key>Values</key>
				<array>
					<string>YES</string>
					<string>YES_ERROR</string>
					<string>NO</string>
				</array>
			</dict>
			<dict>
				<key>Category</key>
				<string>Warnings</string>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array/>
					<key>YES</key>
					<array>
						<string>-Wassign-enum</string>
					</array>
				</dict>
				<key>DefaultValue</key>
				<string>NO</string>
				<key>Name</key>
				<string>CLANG_WARN_ASSIGN_ENUM</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
			<dict>
				<key>Category</key>
				<string>Warnings</string>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array/>
					<key>YES</key>
					<array>
						<string>-Wsign-compare</string>
					</array>
				</dict>
				<key>DefaultValue</key>
				<string>NO</string>
				<key>Name</key>
				<string>GCC_WARN_SIGN_COMPARE</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
			<dict>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array>
						<string>-Wno-selector</string>
					</array>
					<key>YES</key>
					<array>
						<string>-Wselector</string>
					</array>
				</dict>
				<key>DefaultValue</key>
				<string>NO</string>
				<key>FileTypes</key>
				<array>
					<string>sourcecode.c.objc</string>
					<string>sourcecode.cpp.objcpp</string>
				</array>
				<key>Name</key>
				<string>GCC_WARN_MULTIPLE_DEFINITION_TYPES_FOR_SELECTOR</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
			<dict>
				<key>Category</key>
				<string>WarningsObjC</string>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array>
						<string>-Wno-strict-selector-match</string>
					</array>
					<key>YES</key>
					<array>
						<string>-Wstrict-selector-match</string>
					</array>
				</dict>
				<key>DefaultValue</key>
				<string>NO</string>
				<key>FileTypes</key>
				<array>
					<string>sourcecode.c.objc</string>
					<string>sourcecode.cpp.objcpp</string>
				</array>
				<key>Name</key>
				<string>GCC_WARN_STRICT_SELECTOR_MATCH</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
			<dict>
				<key>Category</key>
				<string>WarningsObjC</string>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array>
						<string>-Wno-undeclared-selector</string>
					</array>
					<key>YES</key>
					<array>
						<string>-Wundeclared-selector</string>
					</array>
				</dict>
				<key>DefaultValue</key>
				<string>NO</string>
				<key>FileTypes</key>
				<array>
					<string>sourcecode.c.objc</string>
					<string>sourcecode.cpp.objcpp</string>
				</array>
				<key>Name</key>
				<string>GCC_WARN_UNDECLARED_SELECTOR</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
			<dict>
				<key>Category</key>
				<string>WarningsObjC</string>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array>
						<string>-Wno-deprecated-implementations</string>
					</array>
					<key>YES</key>
					<array>
						<string>-Wdeprecated-implementations</string>
					</array>
				</dict>
				<key>DefaultValue</key>
				<string>NO</string>
				<key>FileTypes</key>
				<array>
					<string>sourcecode.c.objc</string>
					<string>sourcecode.cpp.objcpp</string>
				</array>
				<key>Name</key>
				<string>CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
			<dict>
				<key>Category</key>
				<string>WarningsCXX</string>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array>
						<string>-Wno-c++11-extensions</string>
					</array>
					<key>YES</key>
					<array>
						<string>-Wc++11-extensions</string>
					</array>
				</dict>
				<key>DefaultValue</key>
				<string>NO</string>
				<key>FileTypes</key>
				<array>
					<string>sourcecode.cpp.cpp</string>
					<string>sourcecode.cpp.objcpp</string>
				</array>
				<key>Name</key>
				<string>CLANG_WARN_CXX0X_EXTENSIONS</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
			<dict>
				<key>Category</key>
				<string>WarningsCXX</string>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array/>
					<key>YES</key>
					<array>
						<string>-Watomic-implicit-seq-cst</string>
					</array>
				</dict>
				<key>DefaultValue</key>
				<string>NO</string>
				<key>FileTypes</key>
				<array>
					<string>sourcecode.c.c</string>
					<string>sourcecode.c.objc</string>
					<string>sourcecode.cpp.cpp</string>
					<string>sourcecode.cpp.objcpp</string>
				</array>
				<key>Name</key>
				<string>CLANG_WARN_ATOMIC_IMPLICIT_SEQ_CST</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
			<dict>
				<key>Category</key>
				<string>CustomFlags</string>
				<key>DefaultValue</key>
				<string></string>
				<key>Name</key>
				<string>WARNING_CFLAGS</string>
				<key>Type</key>
				<string>StringList</string>
			</dict>
			<dict>
				<key>Category</key>
				<string>Preprocessing</string>
				<key>CommandLineArgs</key>
				<array>
					<string>-D$(value)</string>
				</array>
				<key>DefaultValue</key>
				<string></string>
				<key>Name</key>
				<string>GCC_PREPROCESSOR_DEFINITIONS</string>
				<key>Type</key>
				<string>StringList</string>
			</dict>
			<dict>
				<key>CommandLineArgs</key>
				<array>
					<string>-D$(value)</string>
				</array>
				<key>DefaultValue</key>
				<string></string>
				<key>Name</key>
				<string>GCC_PRODUCT_TYPE_PREPROCESSOR_DEFINITIONS</string>
				<key>Type</key>
				<string>StringList</string>
			</dict>
			<dict>
				<key>Category</key>
				<string>Preprocessing</string>
				<key>DefaultValue</key>
				<string></string>
				<key>Name</key>
				<string>GCC_PREPROCESSOR_DEFINITIONS_NOT_USED_IN_PRECOMPS</string>
				<key>Type</key>
				<string>StringList</string>
			</dict>
			<dict>
				<key>Category</key>
				<string>Preprocessing</string>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array>
						<string>-DNS_BLOCK_ASSERTIONS=1</string>
					</array>
					<key>YES</key>
					<array/>
				</dict>
				<key>DefaultValue</key>
				<string>YES</string>
				<key>FileTypes</key>
				<array>
					<string>sourcecode.c.objc</string>
					<string>sourcecode.cpp.objcpp</string>
				</array>
				<key>Name</key>
				<string>ENABLE_NS_ASSERTIONS</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
			<dict>
				<key>Category</key>
				<string>Preprocessing</string>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array>
						<string>-DOBJC_OLD_DISPATCH_PROTOTYPES=1</string>
					</array>
					<key>YES</key>
					<array>
						<string>-DOBJC_OLD_DISPATCH_PROTOTYPES=0</string>
					</array>
				</dict>
				<key>DefaultValue</key>
				<string>NO</string>
				<key>FileTypes</key>
				<array>
					<string>sourcecode.c.objc</string>
					<string>sourcecode.cpp.objcpp</string>
				</array>
				<key>Name</key>
				<string>ENABLE_STRICT_OBJC_MSGSEND</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
			<dict>
				<key>DefaultValue</key>
				<string>YES</string>
				<key>Name</key>
				<string>USE_HEADERMAP</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
			<dict>
				<key>DefaultValue</key>
				<string>traditional</string>
				<key>Name</key>
				<string>HEADERMAP_FILE_FORMAT</string>
				<key>Type</key>
				<string>Enumeration</string>
				<key>Values</key>
				<array>
					<string>traditional</string>
				</array>
			</dict>
			<dict>
				<key>DefaultValue</key>
				<string>$(TEMP_DIR)/$(PRODUCT_NAME).hmap</string>
				<key>Name</key>
				<string>CPP_HEADERMAP_FILE</string>
				<key>Type</key>
				<string>Path</string>
			</dict>
			<dict>
				<key>DefaultValue</key>
				<string>$(TEMP_DIR)/$(PRODUCT_NAME)-generated-files.hmap</string>
				<key>Name</key>
				<string>CPP_HEADERMAP_FILE_FOR_GENERATED_FILES</string>
				<key>Type</key>
				<string>Path</string>
			</dict>
			<dict>
				<key>DefaultValue</key>
				<string>$(TEMP_DIR)/$(PRODUCT_NAME)-own-target-headers.hmap</string>
				<key>Name</key>
				<string>CPP_HEADERMAP_FILE_FOR_OWN_TARGET_HEADERS</string>
				<key>Type</key>
				<string>Path</string>
			</dict>
			<dict>
				<key>DefaultValue</key>
				<string>$(TEMP_DIR)/$(PRODUCT_NAME)-all-target-headers.hmap</string>
				<key>Name</key>
				<string>CPP_HEADERMAP_FILE_FOR_ALL_TARGET_HEADERS</string>
				<key>Type</key>
				<string>Path</string>
			</dict>
			<dict>
				<key>DefaultValue</key>
				<string>$(TEMP_DIR)/$(PRODUCT_NAME)-all-non-framework-target-headers.hmap</string>
				<key>Name</key>
				<string>CPP_HEADERMAP_FILE_FOR_ALL_NON_FRAMEWORK_TARGET_HEADERS</string>
				<key>Type</key>
				<string>Path</string>
			</dict>
			<dict>
				<key>DefaultValue</key>
				<string>$(TEMP_DIR)/$(PRODUCT_NAME)-project-headers.hmap</string>
				<key>Name</key>
				<string>CPP_HEADERMAP_FILE_FOR_PROJECT_FILES</string>
				<key>Type</key>
				<string>Path</string>
			</dict>
			<dict>
				<key>DefaultValue</key>
				<string>$(PROJECT_TEMP_DIR)/all-product-headers.yaml</string>
				<key>Name</key>
				<string>CPP_HEADERMAP_PRODUCT_HEADERS_VFS_FILE</string>
				<key>Type</key>
				<string>Path</string>
			</dict>
			<dict>
				<key>DefaultValue</key>
				<string>NO</string>
				<key>Name</key>
				<string>USE_HEADER_SYMLINKS</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
			<dict>
				<key>DefaultValue</key>
				<string>$(TEMP_DIR)/$(PRODUCT_NAME).hdrs</string>
				<key>Name</key>
				<string>CPP_HEADER_SYMLINKS_DIR</string>
				<key>Type</key>
				<string>Path</string>
			</dict>
			<dict>
				<key>CommandLineFlag</key>
				<string>-isysroot</string>
				<key>Name</key>
				<string>SDKROOT</string>
				<key>Type</key>
				<string>Path</string>
			</dict>
			<dict>
				<key>DefaultValue</key>
				<string>YES</string>
				<key>Name</key>
				<string>GCC_USE_GCC3_PFE_SUPPORT</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
			<dict>
				<key>DefaultValue</key>
				<string>c objective-c c++ objective-c++</string>
				<key>Name</key>
				<string>GCC_PFE_FILE_C_DIALECTS</string>
				<key>Type</key>
				<string>StringList</string>
			</dict>
			<dict>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array/>
					<key>YES</key>
					<array>
						<string>-fapple-kext</string>
					</array>
				</dict>
				<key>DefaultValue</key>
				<string>NO</string>
				<key>FileTypes</key>
				<array>
					<string>sourcecode.cpp.cpp</string>
					<string>sourcecode.cpp.objcpp</string>
				</array>
				<key>Name</key>
				<string>ENABLE_APPLE_KEXT_CODE_GENERATION</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
			<dict>
				<key>AppearsAfter</key>
				<string>GCC_WARN_UNUSED_LABEL</string>
				<key>Category</key>
				<string>Warnings</string>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array>
						<string>-Wno-unused-parameter</string>
					</array>
					<key>YES</key>
					<array>
						<string>-Wunused-parameter</string>
					</array>
				</dict>
				<key>DefaultValue</key>
				<string>NO</string>
				<key>Name</key>
				<string>GCC_WARN_UNUSED_PARAMETER</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
			<dict>
				<key>AppearsAfter</key>
				<string>GCC_WARN_UNUSED_PARAMETER</string>
				<key>Category</key>
				<string>Warnings</string>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array>
						<string>-Wno-unused-variable</string>
					</array>
					<key>YES</key>
					<array>
						<string>-Wunused-variable</string>
					</array>
				</dict>
				<key>DefaultValue</key>
				<string>NO</string>
				<key>Name</key>
				<string>GCC_WARN_UNUSED_VARIABLE</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
			<dict>
				<key>AppearsAfter</key>
				<string>GCC_WARN_UNUSED_VARIABLE</string>
				<key>Category</key>
				<string>Warnings</string>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array>
						<string>-Wno-unused-value</string>
					</array>
					<key>YES</key>
					<array>
						<string>-Wunused-value</string>
					</array>
				</dict>
				<key>DefaultValue</key>
				<string>YES</string>
				<key>Name</key>
				<string>GCC_WARN_UNUSED_VALUE</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
			<dict>
				<key>CommandLineFlag</key>
				<string>-fexceptions</string>
				<key>DefaultValue</key>
				<string>NO</string>
				<key>Name</key>
				<string>GCC_ENABLE_EXCEPTIONS</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
			<dict>
				<key>Category</key>
				<string>LanguageObjC</string>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array>
						<string>-fno-objc-exceptions</string>
					</array>
					<key>YES</key>
					<array/>
				</dict>
				<key>DefaultValue</key>
				<string>YES</string>
				<key>FileTypes</key>
				<array>
					<string>sourcecode.c.objc</string>
					<string>sourcecode.cpp.objcpp</string>
				</array>
				<key>Name</key>
				<string>GCC_ENABLE_OBJC_EXCEPTIONS</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
			<dict>
				<key>Architectures</key>
				<array>
					<string>i386</string>
					<string>x86_64</string>
				</array>
				<key>Category</key>
				<string>Language</string>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array/>
					<key>YES</key>
					<array>
						<string>-fasm-blocks</string>
					</array>
				</dict>
				<key>DefaultValue</key>
				<string>YES</string>
				<key>Name</key>
				<string>GCC_CW_ASM_SYNTAX</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
			<dict>
				<key>Category</key>
				<string>CodeGeneration</string>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array/>
					<key>YES</key>
					<array>
						<string>-funroll-loops</string>
					</array>
				</dict>
				<key>DefaultValue</key>
				<string>NO</string>
				<key>Name</key>
				<string>GCC_UNROLL_LOOPS</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
			<dict>
				<key>Category</key>
				<string>CodeGeneration</string>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array/>
					<key>YES</key>
					<array>
						<string>-ffast-math</string>
					</array>
				</dict>
				<key>Condition</key>
				<string>$(LLVM_IMPLICIT_AGGRESSIVE_OPTIMIZATIONS) == NO</string>
				<key>DefaultValue</key>
				<string>NO</string>
				<key>Name</key>
				<string>GCC_FAST_MATH</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
			<dict>
				<key>Category</key>
				<string>CodeGeneration</string>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array>
						<string>-fno-strict-aliasing</string>
					</array>
					<key>YES</key>
					<array>
						<string>-fstrict-aliasing</string>
					</array>
				</dict>
				<key>DefaultValue</key>
				<string>YES</string>
				<key>Name</key>
				<string>GCC_STRICT_ALIASING</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
			<dict>
				<key>AdditionalLinkerArgs</key>
				<dict>
					<key>NO</key>
					<array/>
					<key>YES</key>
					<array>
						<string>-fprofile-arcs</string>
					</array>
				</dict>
				<key>Category</key>
				<string>CodeGeneration</string>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array/>
					<key>YES</key>
					<array>
						<string>-fprofile-arcs</string>
					</array>
				</dict>
				<key>DefaultValue</key>
				<string>NO</string>
				<key>Name</key>
				<string>GCC_INSTRUMENT_PROGRAM_FLOW_ARCS</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
			<dict>
				<key>AdditionalLinkerArgs</key>
				<dict>
					<key>NO</key>
					<array/>
					<key>YES</key>
					<array>
						<string>-ftest-coverage</string>
					</array>
				</dict>
				<key>Category</key>
				<string>CodeGeneration</string>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array/>
					<key>YES</key>
					<array>
						<string>-ftest-coverage</string>
					</array>
				</dict>
				<key>DefaultValue</key>
				<string>NO</string>
				<key>Name</key>
				<string>GCC_GENERATE_TEST_COVERAGE_FILES</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
			<dict>
				<key>Category</key>
				<string>WarningsObjC</string>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array>
						<string>-Wno-protocol</string>
					</array>
					<key>YES</key>
					<array>
						<string>-Wprotocol</string>
					</array>
				</dict>
				<key>DefaultValue</key>
				<string>YES</string>
				<key>FileTypes</key>
				<array>
					<string>sourcecode.c.objc</string>
					<string>sourcecode.cpp.objcpp</string>
				</array>
				<key>Name</key>
				<string>GCC_WARN_ALLOW_INCOMPLETE_PROTOCOL</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
			<dict>
				<key>Category</key>
				<string>Warnings</string>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array>
						<string>-Wno-deprecated-declarations</string>
					</array>
					<key>YES</key>
					<array>
						<string>-Wdeprecated-declarations</string>
					</array>
				</dict>
				<key>DefaultValue</key>
				<string>YES</string>
				<key>Name</key>
				<string>GCC_WARN_ABOUT_DEPRECATED_FUNCTIONS</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
			<dict>
				<key>Category</key>
				<string>WarningsCXX</string>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array>
						<string>-Wno-invalid-offsetof</string>
					</array>
					<key>YES</key>
					<array>
						<string>-Winvalid-offsetof</string>
					</array>
				</dict>
				<key>DefaultValue</key>
				<string>YES</string>
				<key>FileTypes</key>
				<array>
					<string>sourcecode.cpp.cpp</string>
					<string>sourcecode.cpp.objcpp</string>
				</array>
				<key>Name</key>
				<string>GCC_WARN_ABOUT_INVALID_OFFSETOF_MACRO</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
			<dict>
				<key>CommandLineArgs</key>
				<dict>
					<key></key>
					<array/>
					<key>&lt;&lt;otherwise&gt;&gt;</key>
					<array>
						<string>-$(DEPLOYMENT_TARGET_CLANG_FLAG_NAME)=$(value)</string>
					</array>
				</dict>
				<key>Condition</key>
				<string>$(USE_LLVM_TARGET_TRIPLES_FOR_CLANG) != YES</string>
				<key>DefaultValue</key>
				<string>$($(DEPLOYMENT_TARGET_SETTING_NAME))</string>
				<key>Name</key>
				<string>GCC_MACOSX_VERSION_MIN</string>
				<key>Type</key>
				<string>String</string>
			</dict>
			<dict>
				<key>CommandLineArgs</key>
				<dict>
					<key>&lt;&lt;otherwise&gt;&gt;</key>
					<array/>
					<key>dwarf</key>
					<array>
						<string>-g</string>
					</array>
					<key>dwarf-with-dsym</key>
					<array>
						<string>-g</string>
					</array>
				</dict>
				<key>CommonOption</key>
				<string>NO</string>
				<key>Condition</key>
				<string>$(GCC_GENERATE_DEBUGGING_SYMBOLS)</string>
				<key>DefaultValue</key>
				<string>$(DEBUG_INFORMATION_FORMAT)</string>
				<key>Name</key>
				<string>GCC_DEBUG_INFORMATION_FORMAT</string>
				<key>Type</key>
				<string>Enumeration</string>
				<key>Values</key>
				<array>
					<string>dwarf</string>
					<string>dwarf-with-dsym</string>
				</array>
			</dict>
			<dict>
				<key>Category</key>
				<string>CodeGeneration</string>
				<key>CommandLineArgs</key>
				<dict>
					<key>default</key>
					<array/>
					<key>line-tables-only</key>
					<array>
						<string>-gline-tables-only</string>
					</array>
				</dict>
				<key>CommonOption</key>
				<string>NO</string>
				<key>Condition</key>
				<string>$(GCC_GENERATE_DEBUGGING_SYMBOLS)</string>
				<key>DefaultValue</key>
				<string>default</string>
				<key>Name</key>
				<string>CLANG_DEBUG_INFORMATION_LEVEL</string>
				<key>Type</key>
				<string>Enumeration</string>
				<key>Values</key>
				<array>
					<string>default</string>
					<string>line-tables-only</string>
				</array>
			</dict>
			<dict>
				<key>Architectures</key>
				<array>
					<string>i386</string>
					<string>x86_64</string>
				</array>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array/>
					<key>YES</key>
					<array/>
				</dict>
				<key>DefaultValue</key>
				<string>NO</string>
				<key>Description</key>
				<string>Specifies whether the binary uses the builtin functions that provide access to the SSE3 extensions to the IA-32 architecture.</string>
				<key>DisplayName</key>
				<string>Enable SSE3 Extensions</string>
				<key>Name</key>
				<string>GCC_ENABLE_SSE3_EXTENSIONS</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
			<dict>
				<key>Architectures</key>
				<array>
					<string>i386</string>
					<string>x86_64</string>
				</array>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array/>
					<key>YES</key>
					<array/>
				</dict>
				<key>DefaultValue</key>
				<string>NO</string>
				<key>Name</key>
				<string>GCC_ENABLE_SUPPLEMENTAL_SSE3_INSTRUCTIONS</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
			<dict>
				<key>Architectures</key>
				<array>
					<string>i386</string>
					<string>x86_64</string>
				</array>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array/>
					<key>YES</key>
					<array/>
				</dict>
				<key>DefaultValue</key>
				<string>NO</string>
				<key>Description</key>
				<string>Specifies whether the binary uses the builtin functions that provide access to the SSE4.1 extensions to the IA-32 architecture.</string>
				<key>DisplayName</key>
				<string>Enable SSE4.1 Extensions</string>
				<key>Name</key>
				<string>GCC_ENABLE_SSE41_EXTENSIONS</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
			<dict>
				<key>Architectures</key>
				<array>
					<string>i386</string>
					<string>x86_64</string>
				</array>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array/>
					<key>YES</key>
					<array/>
				</dict>
				<key>DefaultValue</key>
				<string>NO</string>
				<key>Description</key>
				<string>Specifies whether the binary uses the builtin functions that provide access to the SSE4.2 extensions to the IA-32 architecture.</string>
				<key>DisplayName</key>
				<string>Enable SSE4.2 Extensions</string>
				<key>Name</key>
				<string>GCC_ENABLE_SSE42_EXTENSIONS</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
			<dict>
				<key>DefaultValue</key>
				<string>sse3</string>
				<key>Name</key>
				<string>DEFAULT_SSE_LEVEL_3_YES</string>
				<key>Type</key>
				<string>String</string>
			</dict>
			<dict>
				<key>DefaultValue</key>
				<string>default</string>
				<key>Name</key>
				<string>DEFAULT_SSE_LEVEL_3_NO</string>
				<key>Type</key>
				<string>String</string>
			</dict>
			<dict>
				<key>DefaultValue</key>
				<string>ssse3</string>
				<key>Name</key>
				<string>DEFAULT_SSE_LEVEL_3_SUPPLEMENTAL_YES</string>
				<key>Type</key>
				<string>String</string>
			</dict>
			<dict>
				<key>DefaultValue</key>
				<string>$(DEFAULT_SSE_LEVEL_3_$(GCC_ENABLE_SSE3_EXTENSIONS))</string>
				<key>Name</key>
				<string>DEFAULT_SSE_LEVEL_3_SUPPLEMENTAL_NO</string>
				<key>Type</key>
				<string>String</string>
			</dict>
			<dict>
				<key>DefaultValue</key>
				<string>sse4.1</string>
				<key>Name</key>
				<string>DEFAULT_SSE_LEVEL_4_1_YES</string>
				<key>Type</key>
				<string>String</string>
			</dict>
			<dict>
				<key>DefaultValue</key>
				<string>$(DEFAULT_SSE_LEVEL_3_SUPPLEMENTAL_$(GCC_ENABLE_SUPPLEMENTAL_SSE3_INSTRUCTIONS))</string>
				<key>Name</key>
				<string>DEFAULT_SSE_LEVEL_4_1_NO</string>
				<key>Type</key>
				<string>String</string>
			</dict>
			<dict>
				<key>DefaultValue</key>
				<string>sse4.2</string>
				<key>Name</key>
				<string>DEFAULT_SSE_LEVEL_4_2_YES</string>
				<key>Type</key>
				<string>String</string>
			</dict>
			<dict>
				<key>DefaultValue</key>
				<string>$(DEFAULT_SSE_LEVEL_4_1_$(GCC_ENABLE_SSE41_EXTENSIONS))</string>
				<key>Name</key>
				<string>DEFAULT_SSE_LEVEL_4_2_NO</string>
				<key>Type</key>
				<string>String</string>
			</dict>
			<dict>
				<key>Architectures</key>
				<array>
					<string>i386</string>
					<string>x86_64</string>
				</array>
				<key>AvoidMacroDefinition</key>
				<string>YES</string>
				<key>Category</key>
				<string>CodeGeneration</string>
				<key>CommandLineArgs</key>
				<dict>
					<key>&lt;&lt;otherwise&gt;&gt;</key>
					<array>
						<string>-m$(value)</string>
					</array>
					<key>avx512</key>
					<array>
						<string>-march=skylake-avx512</string>
					</array>
					<key>default</key>
					<array/>
				</dict>
				<key>DefaultValue</key>
				<string>$(DEFAULT_SSE_LEVEL_4_2_$(GCC_ENABLE_SSE42_EXTENSIONS))</string>
				<key>Description</key>
				<string>Enables the use of extended vector instructions. Only used when targeting Intel architectures.</string>
				<key>DisplayName</key>
				<string>Enable Additional Vector Extensions</string>
				<key>Name</key>
				<string>CLANG_X86_VECTOR_INSTRUCTIONS</string>
				<key>Type</key>
				<string>Enumeration</string>
				<key>Values</key>
				<array>
					<string>default</string>
					<string>sse3</string>
					<string>ssse3</string>
					<string>sse4.1</string>
					<string>sse4.2</string>
					<string>avx</string>
					<string>avx2</string>
					<string>avx512</string>
				</array>
			</dict>
			<dict>
				<key>AppearsAfter</key>
				<string>GCC_FEEDBACK_DIRECTED_OPTIMIZATION</string>
				<key>Category</key>
				<string>CodeGeneration</string>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array/>
					<key>YES</key>
					<array>
						<string>-fvisibility=hidden</string>
					</array>
				</dict>
				<key>DefaultValue</key>
				<string>NO</string>
				<key>Name</key>
				<string>GCC_SYMBOLS_PRIVATE_EXTERN</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
			<dict>
				<key>AppearsAfter</key>
				<string>GCC_SYMBOLS_PRIVATE_EXTERN</string>
				<key>Category</key>
				<string>CodeGeneration</string>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array/>
					<key>YES</key>
					<array>
						<string>-fvisibility-inlines-hidden</string>
					</array>
				</dict>
				<key>DefaultValue</key>
				<string>NO</string>
				<key>Description</key>
				<string>When enabled, out-of-line copies of inline methods are declared `private extern`.</string>
				<key>DisplayName</key>
				<string>Inline Methods Hidden</string>
				<key>FileTypes</key>
				<array>
					<string>sourcecode.cpp.cpp</string>
					<string>sourcecode.cpp.objcpp</string>
				</array>
				<key>Name</key>
				<string>GCC_INLINES_ARE_PRIVATE_EXTERN</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
			<dict>
				<key>AppearsAfter</key>
				<string>GCC_INLINES_ARE_PRIVATE_EXTERN</string>
				<key>Category</key>
				<string>CodeGeneration</string>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array>
						<string>-fno-threadsafe-statics</string>
					</array>
					<key>YES</key>
					<array/>
				</dict>
				<key>DefaultValue</key>
				<string>YES</string>
				<key>Description</key>
				<string>Emits extra code to use the routines specified in the C++ ABI for thread-safe initialization of local statics. You can disable this option to reduce code size slightly in code that doesn't need to be thread-safe.</string>
				<key>DisplayName</key>
				<string>Statics are Thread-Safe</string>
				<key>FileTypes</key>
				<array>
					<string>sourcecode.cpp.cpp</string>
					<string>sourcecode.cpp.objcpp</string>
				</array>
				<key>Name</key>
				<string>GCC_THREADSAFE_STATICS</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
			<dict>
				<key>AppearsAfter</key>
				<string>GCC_WARN_SIGN_COMPARE</string>
				<key>Category</key>
				<string>Warnings</string>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array>
						<string>-Wno-pointer-sign</string>
					</array>
					<key>YES</key>
					<array>
						<string>-Wpointer-sign</string>
					</array>
				</dict>
				<key>CommonOption</key>
				<string>YES</string>
				<key>DefaultValue</key>
				<string>YES</string>
				<key>Description</key>
				<string>Warn when pointers passed via arguments or assigned to a variable differ in sign.</string>
				<key>DisplayName</key>
				<string>Pointer Sign Comparison</string>
				<key>FileTypes</key>
				<array>
					<string>sourcecode.c.c</string>
					<string>sourcecode.c.objc</string>
				</array>
				<key>Name</key>
				<string>GCC_WARN_ABOUT_POINTER_SIGNEDNESS</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
			<dict>
				<key>AppearsAfter</key>
				<string>GCC_WARN_ABOUT_POINTER_SIGNEDNESS</string>
				<key>Category</key>
				<string>Warnings</string>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array>
						<string>-Wno-newline-eof</string>
					</array>
					<key>YES</key>
					<array>
						<string>-Wnewline-eof</string>
					</array>
				</dict>
				<key>CommonOption</key>
				<string>NO</string>
				<key>DefaultValue</key>
				<string>NO</string>
				<key>Description</key>
				<string>Warn when a source file does not end with a newline.</string>
				<key>DisplayName</key>
				<string>Missing Newline At End Of File</string>
				<key>Name</key>
				<string>GCC_WARN_ABOUT_MISSING_NEWLINE</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
			<dict>
				<key>Category</key>
				<string>Warnings</string>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array>
						<string>-Wno-sign-conversion</string>
					</array>
					<key>YES</key>
					<array>
						<string>-Wsign-conversion</string>
					</array>
					<key>YES_ERROR</key>
					<array>
						<string>-Werror=sign-conversion</string>
					</array>
				</dict>
				<key>CommonOption</key>
				<string>NO</string>
				<key>DefaultValue</key>
				<string>NO</string>
				<key>Name</key>
				<string>CLANG_WARN_IMPLICIT_SIGN_CONVERSION</string>
				<key>Type</key>
				<string>Enumeration</string>
				<key>Values</key>
				<array>
					<string>YES</string>
					<string>YES_ERROR</string>
					<string>NO</string>
				</array>
			</dict>
			<dict>
				<key>AppearsAfter</key>
				<string>GCC_WARN_SIGN_COMPARE</string>
				<key>Category</key>
				<string>Warnings</string>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array>
						<string>-Wno-shorten-64-to-32</string>
					</array>
					<key>YES</key>
					<array>
						<string>-Wshorten-64-to-32</string>
					</array>
					<key>YES_ERROR</key>
					<array>
						<string>-Werror=shorten-64-to-32</string>
					</array>
				</dict>
				<key>CommonOption</key>
				<string>NO</string>
				<key>DefaultValue</key>
				<string>NO</string>
				<key>DisplayName</key>
				<string>Implicit Conversion to 32 Bit Type</string>
				<key>Name</key>
				<string>GCC_WARN_64_TO_32_BIT_CONVERSION</string>
				<key>Type</key>
				<string>Enumeration</string>
				<key>Values</key>
				<array>
					<string>YES</string>
					<string>YES_ERROR</string>
					<string>NO</string>
				</array>
			</dict>
			<dict>
				<key>Category</key>
				<string>Warnings</string>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array>
						<string>-Wno-infinite-recursion</string>
					</array>
					<key>YES</key>
					<array>
						<string>-Winfinite-recursion</string>
					</array>
				</dict>
				<key>CommonOption</key>
				<string>NO</string>
				<key>DefaultValue</key>
				<string>NO</string>
				<key>Name</key>
				<string>CLANG_WARN_INFINITE_RECURSION</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
			<dict>
				<key>Category</key>
				<string>WarningsCXX</string>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array>
						<string>-Wno-move</string>
					</array>
					<key>YES</key>
					<array>
						<string>-Wmove</string>
					</array>
				</dict>
				<key>CommonOption</key>
				<string>NO</string>
				<key>DefaultValue</key>
				<string>NO</string>
				<key>FileTypes</key>
				<array>
					<string>sourcecode.cpp.cpp</string>
					<string>sourcecode.cpp.objcpp</string>
				</array>
				<key>Name</key>
				<string>CLANG_WARN_SUSPICIOUS_MOVE</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
			<dict>
				<key>Category</key>
				<string>Warnings</string>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array>
						<string>-Wno-comma</string>
					</array>
					<key>YES</key>
					<array>
						<string>-Wcomma</string>
					</array>
					<key>YES_ERROR</key>
					<array>
						<string>-Werror=comma</string>
					</array>
				</dict>
				<key>CommonOption</key>
				<string>NO</string>
				<key>DefaultValue</key>
				<string>NO</string>
				<key>Name</key>
				<string>CLANG_WARN_COMMA</string>
				<key>SupportedVersionRanges</key>
				<array>
					<string>900.0.0</string>
				</array>
				<key>Type</key>
				<string>Enumeration</string>
				<key>Values</key>
				<array>
					<string>YES</string>
					<string>NO</string>
					<string>YES_ERROR</string>
				</array>
			</dict>
			<dict>
				<key>Category</key>
				<string>Warnings</string>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array>
						<string>-Wno-block-capture-autoreleasing</string>
					</array>
					<key>YES</key>
					<array>
						<string>-Wblock-capture-autoreleasing</string>
					</array>
					<key>YES_ERROR</key>
					<array>
						<string>-Werror=block-capture-autoreleasing</string>
					</array>
				</dict>
				<key>CommonOption</key>
				<string>NO</string>
				<key>DefaultValue</key>
				<string>NO</string>
				<key>Name</key>
				<string>CLANG_WARN_BLOCK_CAPTURE_AUTORELEASING</string>
				<key>SupportedVersionRanges</key>
				<array>
					<string>900.0.0</string>
				</array>
				<key>Type</key>
				<string>Enumeration</string>
				<key>Values</key>
				<array>
					<string>YES</string>
					<string>NO</string>
					<string>YES_ERROR</string>
				</array>
			</dict>
			<dict>
				<key>Category</key>
				<string>Warnings</string>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array>
						<string>-Wno-strict-prototypes</string>
					</array>
					<key>YES</key>
					<array>
						<string>-Wstrict-prototypes</string>
					</array>
					<key>YES_ERROR</key>
					<array>
						<string>-Werror=strict-prototypes</string>
					</array>
				</dict>
				<key>CommonOption</key>
				<string>NO</string>
				<key>DefaultValue</key>
				<string>NO</string>
				<key>Name</key>
				<string>CLANG_WARN_STRICT_PROTOTYPES</string>
				<key>SupportedVersionRanges</key>
				<array>
					<string>900.0.0</string>
				</array>
				<key>Type</key>
				<string>Enumeration</string>
				<key>Values</key>
				<array>
					<string>YES</string>
					<string>NO</string>
					<string>YES_ERROR</string>
				</array>
			</dict>
			<dict>
				<key>Category</key>
				<string>WarningsCXX</string>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array>
						<string>-Wno-range-loop-analysis</string>
					</array>
					<key>YES</key>
					<array>
						<string>-Wrange-loop-analysis</string>
					</array>
				</dict>
				<key>CommonOption</key>
				<string>NO</string>
				<key>DefaultValue</key>
				<string>NO</string>
				<key>FileTypes</key>
				<array>
					<string>sourcecode.cpp.cpp</string>
					<string>sourcecode.cpp.objcpp</string>
				</array>
				<key>Name</key>
				<string>CLANG_WARN_RANGE_LOOP_ANALYSIS</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
			<dict>
				<key>Category</key>
				<string>Warnings</string>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array>
						<string>-Wno-semicolon-before-method-body</string>
					</array>
					<key>YES</key>
					<array>
						<string>-Wsemicolon-before-method-body</string>
					</array>
				</dict>
				<key>CommonOption</key>
				<string>NO</string>
				<key>DefaultValue</key>
				<string>NO</string>
				<key>Name</key>
				<string>CLANG_WARN_SEMICOLON_BEFORE_METHOD_BODY</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
			<dict>
				<key>Category</key>
				<string>Warnings</string>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array>
						<string>-Wno-unguarded-availability</string>
					</array>
					<key>YES</key>
					<array/>
					<key>YES_AGGRESSIVE</key>
					<array>
						<string>-Wunguarded-availability</string>
					</array>
				</dict>
				<key>DefaultValue</key>
				<string>YES</string>
				<key>Name</key>
				<string>CLANG_WARN_UNGUARDED_AVAILABILITY</string>
				<key>SupportedVersionRanges</key>
				<array>
					<string>900.0.0</string>
				</array>
				<key>Type</key>
				<string>Enumeration</string>
				<key>Values</key>
				<array>
					<string>YES</string>
					<string>YES_AGGRESSIVE</string>
					<string>NO</string>
				</array>
			</dict>
			<dict>
				<key>CommandLineArgs</key>
				<dict>
					<key></key>
					<array/>
					<key>&lt;&lt;otherwise&gt;&gt;</key>
					<array>
						<string>-fobjc-abi-version=$(value)</string>
					</array>
				</dict>
				<key>DefaultValue</key>
				<string>$(OBJC_ABI_VERSION)</string>
				<key>FileTypes</key>
				<array>
					<string>sourcecode.c.objc</string>
					<string>sourcecode.cpp.objcpp</string>
				</array>
				<key>Name</key>
				<string>GCC_OBJC_ABI_VERSION</string>
				<key>Type</key>
				<string>Enumeration</string>
				<key>Values</key>
				<array>
					<string>1</string>
					<string>2</string>
				</array>
			</dict>
			<dict>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array/>
					<key>YES</key>
					<array>
						<string>-fobjc-legacy-dispatch</string>
					</array>
				</dict>
				<key>DefaultValue</key>
				<string>NO</string>
				<key>FileTypes</key>
				<array>
					<string>sourcecode.c.objc</string>
					<string>sourcecode.cpp.objcpp</string>
				</array>
				<key>Name</key>
				<string>GCC_OBJC_LEGACY_DISPATCH</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
			<dict>
				<key>AdditionalLinkerArgs</key>
				<dict>
					<key>NO</key>
					<array/>
					<key>YES</key>
					<array>
						<string>-fprofile-instr-generate</string>
					</array>
				</dict>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array/>
					<key>YES</key>
					<array>
						<string>-fprofile-instr-generate</string>
					</array>
				</dict>
				<key>DefaultValue</key>
				<string>NO</string>
				<key>Name</key>
				<string>CLANG_INSTRUMENT_FOR_OPTIMIZATION_PROFILING</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
			<dict>
				<key>Category</key>
				<string>CodeGeneration</string>
				<key>DefaultValue</key>
				<string>$(SRCROOT)/OptimizationProfiles/$(PROJECT_NAME).profdata</string>
				<key>Name</key>
				<string>CLANG_OPTIMIZATION_PROFILE_FILE</string>
				<key>Type</key>
				<string>Path</string>
			</dict>
			<dict>
				<key>Category</key>
				<string>CodeGeneration</string>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array/>
					<key>YES</key>
					<array>
						<string>-fprofile-instr-use=$(CLANG_OPTIMIZATION_PROFILE_FILE)</string>
					</array>
				</dict>
				<key>Condition</key>
				<string>! $(CLANG_INSTRUMENT_FOR_OPTIMIZATION_PROFILING) &amp;&amp; ! $(CLANG_COVERAGE_MAPPING)</string>
				<key>DefaultValue</key>
				<string>NO</string>
				<key>Name</key>
				<string>CLANG_USE_OPTIMIZATION_PROFILE</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
			<dict>
				<key>Category</key>
				<string>CodeGeneration</string>
				<key>DefaultValue</key>
				<string>YES</string>
				<key>Description</key>
				<string>Enables building with code coverage instrumentation. This is only used when the build has code coverage enabled, which is typically done via the Xcode scheme settings.</string>
				<key>DisplayName</key>
				<string>Enable Code Coverage Support</string>
				<key>Name</key>
				<string>CLANG_ENABLE_CODE_COVERAGE</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
			<dict>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array/>
					<key>YES</key>
					<array>
						<string>-fprofile-instr-generate</string>
						<string>-fcoverage-mapping</string>
					</array>
				</dict>
				<key>Condition</key>
				<string>$(CLANG_ENABLE_CODE_COVERAGE)</string>
				<key>DefaultValue</key>
				<string>NO</string>
				<key>Name</key>
				<string>CLANG_COVERAGE_MAPPING</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
			<dict>
				<key>AdditionalLinkerArgs</key>
				<dict>
					<key>NO</key>
					<array/>
					<key>YES</key>
					<array>
						<string>-fprofile-instr-generate</string>
					</array>
				</dict>
				<key>DefaultValue</key>
				<string>$(CLANG_COVERAGE_MAPPING)</string>
				<key>Name</key>
				<string>CLANG_COVERAGE_MAPPING_LINKER_ARGS</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
			<dict>
				<key>Architectures</key>
				<array>
					<string>arm64</string>
					<string>armv7</string>
					<string>armv7s</string>
					<string>armv7k</string>
				</array>
				<key>CommandLineArgs</key>
				<dict>
					<key>bitcode</key>
					<array>
						<string>-fembed-bitcode</string>
					</array>
					<key>marker</key>
					<array>
						<string>-fembed-bitcode-marker</string>
					</array>
				</dict>
				<key>Condition</key>
				<string>$(ENABLE_BITCODE) == YES</string>
				<key>DefaultValue</key>
				<string>$(BITCODE_GENERATION_MODE)</string>
				<key>Name</key>
				<string>CLANG_BITCODE_GENERATION_MODE</string>
				<key>Type</key>
				<string>Enumeration</string>
				<key>Values</key>
				<array>
					<string>none</string>
					<string>marker</string>
					<string>bitcode</string>
				</array>
			</dict>
			<dict>
				<key>AdditionalLinkerArgs</key>
				<dict>
					<key>NO</key>
					<array/>
					<key>YES</key>
					<array>
						<string>-fsanitize=address</string>
					</array>
				</dict>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array/>
					<key>YES</key>
					<array>
						<string>-fsanitize=address</string>
					</array>
				</dict>
				<key>DefaultValue</key>
				<string>$(ENABLE_ADDRESS_SANITIZER)</string>
				<key>Name</key>
				<string>CLANG_ADDRESS_SANITIZER</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
			<dict>
				<key>Category</key>
				<string>ASANPolicy</string>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array>
						<string>-D_LIBCPP_HAS_NO_ASAN</string>
					</array>
					<key>YES</key>
					<array/>
				</dict>
				<key>Condition</key>
				<string>$(CLANG_ADDRESS_SANITIZER) == YES</string>
				<key>DefaultValue</key>
				<string>NO</string>
				<key>Name</key>
				<string>CLANG_ADDRESS_SANITIZER_CONTAINER_OVERFLOW</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
			<dict>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array/>
					<key>YES</key>
					<array>
						<string>-fsanitize-address-use-after-scope</string>
					</array>
				</dict>
				<key>Condition</key>
				<string>$(CLANG_ADDRESS_SANITIZER) == YES</string>
				<key>DefaultValue</key>
				<string>NO</string>
				<key>Name</key>
				<string>CLANG_ADDRESS_SANITIZER_USE_AFTER_SCOPE</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
			<dict>
				<key>AdditionalLinkerArgs</key>
				<dict>
					<key>NO</key>
					<array/>
					<key>YES</key>
					<array>
						<string>-fsanitize=undefined</string>
					</array>
				</dict>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array/>
					<key>YES</key>
					<array>
						<string>-fsanitize=undefined</string>
						<string>-fno-sanitize=enum,return,float-divide-by-zero,function,vptr</string>
					</array>
				</dict>
				<key>DefaultValue</key>
				<string>$(ENABLE_UNDEFINED_BEHAVIOR_SANITIZER)</string>
				<key>Name</key>
				<string>CLANG_UNDEFINED_BEHAVIOR_SANITIZER</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
			<dict>
				<key>Category</key>
				<string>UBSANPolicy</string>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array/>
					<key>YES</key>
					<array>
						<string>-fsanitize=integer</string>
					</array>
				</dict>
				<key>Condition</key>
				<string>$(CLANG_UNDEFINED_BEHAVIOR_SANITIZER) == YES</string>
				<key>DefaultValue</key>
				<string>NO</string>
				<key>Name</key>
				<string>CLANG_UNDEFINED_BEHAVIOR_SANITIZER_INTEGER</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
			<dict>
				<key>Category</key>
				<string>UBSANPolicy</string>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array/>
					<key>YES</key>
					<array>
						<string>-fsanitize=nullability</string>
					</array>
				</dict>
				<key>Condition</key>
				<string>$(CLANG_UNDEFINED_BEHAVIOR_SANITIZER) == YES</string>
				<key>DefaultValue</key>
				<string>NO</string>
				<key>Name</key>
				<string>CLANG_UNDEFINED_BEHAVIOR_SANITIZER_NULLABILITY</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
			<dict>
				<key>DefaultValue</key>
				<string>$(INDEX_DATA_STORE_DIR)</string>
				<key>Name</key>
				<string>CLANG_INDEX_STORE_PATH</string>
				<key>Type</key>
				<string>Path</string>
			</dict>
			<dict>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array/>
					<key>YES</key>
					<array>
						<string>-index-store-path</string>
						<string>$(CLANG_INDEX_STORE_PATH)</string>
					</array>
				</dict>
				<key>Condition</key>
				<string>$(COMPILER_INDEX_STORE_ENABLE) == YES  ||  ( $(COMPILER_INDEX_STORE_ENABLE) == Default  &amp;&amp;  $(GCC_OPTIMIZATION_LEVEL) == 0 )</string>
				<key>DefaultValue</key>
				<string>$(INDEX_ENABLE_DATA_STORE)</string>
				<key>Name</key>
				<string>CLANG_INDEX_STORE_ENABLE</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
			<dict>
				<key>Architectures</key>
				<array>
					<string>x86_64</string>
					<string>arm64</string>
				</array>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array/>
					<key>YES</key>
					<array>
						<string>-fsanitize=thread</string>
					</array>
				</dict>
				<key>DefaultValue</key>
				<string>$(ENABLE_THREAD_SANITIZER)</string>
				<key>Name</key>
				<string>CLANG_THREAD_SANITIZER</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
			<dict>
				<key>CommandLineArgs</key>
				<dict>
					<key>donothing</key>
					<array/>
					<key>precheck</key>
					<array>
						<string>-ccc-arcmt-check</string>
					</array>
				</dict>
				<key>DefaultValue</key>
				<string>donothing</string>
				<key>Name</key>
				<string>CLANG_ARC_MIGRATE_PRECHECK</string>
				<key>Type</key>
				<string>Enumeration</string>
				<key>Values</key>
				<array>
					<string>donothing</string>
					<string>precheck</string>
				</array>
			</dict>
			<dict>
				<key>CommandLineFlag</key>
				<string>-ccc-arcmt-migrate</string>
				<key>Name</key>
				<string>CLANG_ARC_MIGRATE_DIR</string>
				<key>Type</key>
				<string>Path</string>
			</dict>
			<dict>
				<key>CommandLineFlag</key>
				<string>-ccc-objcmt-migrate</string>
				<key>Name</key>
				<string>CLANG_OBJC_MIGRATE_DIR</string>
				<key>Type</key>
				<string>Path</string>
			</dict>
			<dict>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array/>
					<key>YES</key>
					<array>
						<string>-arcmt-migrate-emit-errors</string>
					</array>
				</dict>
				<key>DefaultValue</key>
				<string>NO</string>
				<key>Name</key>
				<string>CLANG_ARC_MIGRATE_EMIT_ERROR</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
			<dict>
				<key>CommandLineFlag</key>
				<string>-arcmt-migrate-report-output</string>
				<key>Name</key>
				<string>CLANG_ARC_MIGRATE_REPORT_OUTPUT</string>
				<key>Type</key>
				<string>Path</string>
			</dict>
		</array>
		<key>PatternsOfFlagsNotAffectingPrecomps</key>
		<array>
			<string>-v</string>
			<string>-###</string>
			<string>-H</string>
			<string>-time</string>
			<string>-save-temps</string>
			<string>-W*</string>
			<string>-w</string>
			<string>-fdiagnostics-show-note-include-stack</string>
			<string>-fmacro-backtrace-limit*</string>
			<string>-fmessage-length*</string>
			<string>-fcolor-diagnostics</string>
			<string>-fvectorize</string>
			<string>-flto</string>
			<string>-fstrict-aliasing</string>
			<string>-fno-strict-aliasing</string>
			<string>-fmodules-autolink</string>
			<string>-fmodules-prune-interval*</string>
			<string>-fmodules-prune-after*</string>
			<string>-fbuild-session-timestamp*</string>
			<string>-fmodules-validate-once-per-build-session</string>
		</array>
		<key>ProgressDescription</key>
		<string>Compiling $(CommandProgressByType) source files</string>
		<key>ProgressDescriptionForPrecompile</key>
		<string>Precompiling $(CommandProgressByType) prefix headers</string>
		<key>ShowInCompilerSelectionPopup</key>
		<string>YES</string>
		<key>SupportsHeadermaps</key>
		<string>Yes</string>
		<key>SupportsIsysroot</key>
		<string>Yes</string>
		<key>SupportsMacOSXDeploymentTarget</key>
		<string>Yes</string>
		<key>SupportsMacOSXMinVersionFlag</key>
		<string>Yes</string>
		<key>SupportsPredictiveCompilation</key>
		<string>No</string>
		<key>SupportsSeparateUserHeaderPaths</key>
		<string>Yes</string>
		<key>Type</key>
		<string>Compiler</string>
		<key>UseCPlusPlusCompilerDriverWhenBundlizing</key>
		<string>Yes</string>
		<key>Vendor</key>
		<string>Apple</string>
		<key>Version</key>
		<string>9.0</string>
	</dict>
	<dict>
		<key>Architectures</key>
		<array>
			<string>i386</string>
			<string>x86_64</string>
			<string>armv6</string>
			<string>armv7</string>
			<string>arm64</string>
			<string>armv7k</string>
		</array>
		<key>BasedOn</key>
		<string>com.apple.compilers.llvm.clang.1_0</string>
		<key>CommandResultsPostprocessor</key>
		<string>XCClangResultsPostprocessor</string>
		<key>DependencyInfoArgs</key>
		<array>
			<string>-MMD</string>
			<string>-MT</string>
			<string>dependencies</string>
			<string>-MF</string>
			<string>$(DependencyInfoFile)</string>
		</array>
		<key>DependencyInfoFile</key>
		<string>$(OutputDir)/$(OutputFileBase).d</string>
		<key>Description</key>
		<string>Apple Clang compiler</string>
		<key>ExecCPlusPlusLinkerPath</key>
		<string>clang++</string>
		<key>FallbackTools</key>
		<array>
			<string>com.apple.compilers.llvmgcc42</string>
		</array>
		<key>Identifier</key>
		<string>com.apple.compilers.llvm.clang.1_0.compiler</string>
		<key>IsAbstract</key>
		<string>YES</string>
		<key>Name</key>
		<string>Apple Clang</string>
		<key>OptionConditionFlavors</key>
		<array>
			<string>arch</string>
			<string>sdk</string>
		</array>
		<key>ShowInCompilerSelectionPopup</key>
		<string>NO</string>
		<key>SupportsGenerateAssemblyFile</key>
		<string>YES</string>
		<key>SupportsGeneratePreprocessedFile</key>
		<string>YES</string>
		<key>Type</key>
		<string>Compiler</string>
	</dict>
	<dict>
		<key>Architectures</key>
		<array>
			<string>i386</string>
			<string>x86_64</string>
			<string>armv6</string>
			<string>armv7</string>
			<string>arm64</string>
			<string>armv7k</string>
		</array>
		<key>BasedOn</key>
		<string>com.apple.compilers.llvm.clang.1_0</string>
		<key>CommandOutputParser</key>
		<array>
			<array>
				<string>^([^:]*):([0-9]*):[0-9]*: [^:]*error: (.*)$</string>
				<string>emit-analyzer-warning</string>
			</array>
			<array>
				<string>^([^:]*):() [^:]*error: (.*)$</string>
				<string>emit-analyzer-warning</string>
			</array>
			<array>
				<string>^()()error: (.*)$</string>
				<string>emit-analyzer-warning</string>
			</array>
		</array>
		<key>CommandResultsPostprocessor</key>
		<string>XCStaticAnalyzerResultsPostprocessor</string>
		<key>DependencyInfoArgs</key>
		<array>
			<string>-MMD</string>
			<string>-MT</string>
			<string>dependencies</string>
			<string>-MF</string>
			<string>$(DependencyInfoFile)</string>
		</array>
		<key>DependencyInfoFile</key>
		<string>$(OutputDir)/$(OutputFileBase).d</string>
		<key>Description</key>
		<string>Apple Clang Static Analyzer</string>
		<key>ExecDescription</key>
		<string>Analyze$(StaticAnalyzerModeNameDescription) $(InputFile)</string>
		<key>ExecPath</key>
		<string>$(CLANG_ANALYZER_EXEC)</string>
		<key>FileTypes</key>
		<array>
			<string>sourcecode.c.c</string>
			<string>sourcecode.c.objc</string>
			<string>sourcecode.cpp.cpp</string>
			<string>sourcecode.cpp.objcpp</string>
		</array>
		<key>Identifier</key>
		<string>com.apple.compilers.llvm.clang.1_0.analyzer</string>
		<key>IsAbstract</key>
		<string>YES</string>
		<key>Name</key>
		<string>Static Analyzer</string>
		<key>Options</key>
		<array>
			<dict>
				<key>DefaultValue</key>
				<string>clang</string>
				<key>Name</key>
				<string>CLANG_ANALYZER_EXEC</string>
				<key>Type</key>
				<string>Path</string>
			</dict>
			<dict>
				<key>CommandLineArgs</key>
				<array/>
				<key>Name</key>
				<string>CLANG_INDEX_STORE_ENABLE</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
			<dict>
				<key>CommandLineArgs</key>
				<array>
					<string>$(value)</string>
				</array>
				<key>DefaultValue</key>
				<string>-D__clang_analyzer__</string>
				<key>Name</key>
				<string>CLANG_ANALYZER_DEFINES</string>
				<key>Type</key>
				<string>String</string>
			</dict>
			<dict>
				<key>DefaultValue</key>
				<string>$(TEMP_DIR)</string>
				<key>Name</key>
				<string>CLANG_ANALYZER_OUTPUT_DIR</string>
				<key>Type</key>
				<string>Path</string>
			</dict>
			<dict>
				<key>CommandLineArgs</key>
				<dict>
					<key>&lt;&lt;otherwise&gt;&gt;</key>
					<array>
						<string>-Xclang</string>
						<string>-analyzer-output=$(value)</string>
					</array>
					<key>default</key>
					<array/>
				</dict>
				<key>DefaultValue</key>
				<string>plist-multi-file</string>
				<key>Name</key>
				<string>CLANG_ANALYZER_OUTPUT</string>
				<key>Type</key>
				<string>Enumeration</string>
				<key>Values</key>
				<array>
					<string>default</string>
					<string>plist-multi-file</string>
				</array>
			</dict>
			<dict>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array>
						<string>-Xclang</string>
						<string>-analyzer-config</string>
						<string>-Xclang</string>
						<string>path-diagnostics-alternate=false</string>
					</array>
					<key>YES</key>
					<array>
						<string>-Xclang</string>
						<string>-analyzer-config</string>
						<string>-Xclang</string>
						<string>path-diagnostics-alternate=true</string>
					</array>
				</dict>
				<key>DefaultValue</key>
				<string>YES</string>
				<key>Name</key>
				<string>CLANG_ANALYZER_ALTERNATE_EDGES</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
			<dict>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array/>
					<key>YES</key>
					<array>
						<string>-Xclang</string>
						<string>-analyzer-config</string>
						<string>-Xclang</string>
						<string>report-in-main-source-file=true</string>
					</array>
				</dict>
				<key>DefaultValue</key>
				<string>YES</string>
				<key>Name</key>
				<string>CLANG_ANALYZER_REPORT_MAIN_SOURCE_FILE</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
			<dict>
				<key>Category</key>
				<string>SAPolicy</string>
				<key>DefaultValue</key>
				<string>NO</string>
				<key>Name</key>
				<string>RUN_CLANG_STATIC_ANALYZER</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
			<dict>
				<key>DefaultValue</key>
				<string>Shallow</string>
				<key>Name</key>
				<string>CLANG_STATIC_ANALYZER_MODE_ACTION_shallow</string>
				<key>Type</key>
				<string>String</string>
			</dict>
			<dict>
				<key>DefaultValue</key>
				<string></string>
				<key>Name</key>
				<string>CLANG_STATIC_ANALYZER_MODE_ACTION_deep</string>
				<key>Type</key>
				<string>String</string>
			</dict>
			<dict>
				<key>AppearsAfter</key>
				<string>RUN_CLANG_STATIC_ANALYZER</string>
				<key>Category</key>
				<string>SAPolicy</string>
				<key>CommandLineArgs</key>
				<dict>
					<key>deep</key>
					<array/>
					<key>shallow</key>
					<array>
						<string>-Xclang</string>
						<string>-analyzer-config</string>
						<string>-Xclang</string>
						<string>mode=shallow</string>
					</array>
				</dict>
				<key>DefaultValue</key>
				<string>shallow</string>
				<key>Name</key>
				<string>CLANG_STATIC_ANALYZER_MODE</string>
				<key>Type</key>
				<string>Enumeration</string>
				<key>Values</key>
				<array>
					<string>shallow</string>
					<string>deep</string>
				</array>
			</dict>
			<dict>
				<key>AppearsAfter</key>
				<string>CLANG_STATIC_ANALYZER_MODE</string>
				<key>Category</key>
				<string>SAPolicy</string>
				<key>DefaultValue</key>
				<string>deep</string>
				<key>Name</key>
				<string>CLANG_STATIC_ANALYZER_MODE_ON_ANALYZE_ACTION</string>
				<key>Type</key>
				<string>Enumeration</string>
				<key>Values</key>
				<array>
					<string>shallow</string>
					<string>deep</string>
				</array>
			</dict>
			<dict>
				<key>Category</key>
				<string>SACheckers</string>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array>
						<string>-Xclang</string>
						<string>-analyzer-disable-checker</string>
						<string>-Xclang</string>
						<string>deadcode.DeadStores</string>
					</array>
					<key>YES</key>
					<array/>
				</dict>
				<key>DefaultValue</key>
				<string>YES</string>
				<key>Name</key>
				<string>CLANG_ANALYZER_DEADCODE_DEADSTORES</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
			<dict>
				<key>Category</key>
				<string>SAAppleAPICheckers</string>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array>
						<string>-Xclang</string>
						<string>-analyzer-disable-checker</string>
						<string>-Xclang</string>
						<string>osx.coreFoundation.containers.PointerSizedValues</string>
						<string>-Xclang</string>
						<string>-analyzer-disable-checker</string>
						<string>-Xclang</string>
						<string>osx.cocoa.VariadicMethodTypes</string>
						<string>-Xclang</string>
						<string>-analyzer-disable-checker</string>
						<string>-Xclang</string>
						<string>osx.cocoa.NilArg</string>
					</array>
					<key>YES</key>
					<array/>
				</dict>
				<key>DefaultValue</key>
				<string>YES</string>
				<key>Name</key>
				<string>CLANG_ANALYZER_OBJC_COLLECTIONS</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
			<dict>
				<key>Category</key>
				<string>SAAppleAPICheckers</string>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array>
						<string>-Xclang</string>
						<string>-analyzer-disable-checker</string>
						<string>-Xclang</string>
						<string>osx.coreFoundation.CFError</string>
						<string>-Xclang</string>
						<string>-analyzer-disable-checker</string>
						<string>-Xclang</string>
						<string>osx.cocoa.NSError</string>
					</array>
					<key>YES</key>
					<array/>
				</dict>
				<key>DefaultValue</key>
				<string>YES</string>
				<key>Name</key>
				<string>CLANG_ANALYZER_OBJC_NSCFERROR</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
			<dict>
				<key>Category</key>
				<string>SAObjCCheckers</string>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array>
						<string>-Xclang</string>
						<string>-analyzer-disable-checker</string>
						<string>-Xclang</string>
						<string>osx.cocoa.IncompatibleMethodTypes</string>
					</array>
					<key>YES</key>
					<array/>
				</dict>
				<key>DefaultValue</key>
				<string>YES</string>
				<key>Name</key>
				<string>CLANG_ANALYZER_OBJC_INCOMP_METHOD_TYPES</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
			<dict>
				<key>Category</key>
				<string>SAObjCCheckers</string>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array>
						<string>-Xclang</string>
						<string>-analyzer-disable-checker</string>
						<string>-Xclang</string>
						<string>osx.cocoa.UnusedIvars</string>
					</array>
					<key>YES</key>
					<array/>
				</dict>
				<key>DefaultValue</key>
				<string>YES</string>
				<key>Name</key>
				<string>CLANG_ANALYZER_OBJC_UNUSED_IVARS</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
			<dict>
				<key>Category</key>
				<string>SAObjCCheckers</string>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array>
						<string>-Xclang</string>
						<string>-analyzer-disable-checker</string>
						<string>-Xclang</string>
						<string>osx.cocoa.ObjCGenerics</string>
					</array>
					<key>YES</key>
					<array/>
				</dict>
				<key>DefaultValue</key>
				<string>YES</string>
				<key>Name</key>
				<string>CLANG_ANALYZER_OBJC_GENERICS</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
			<dict>
				<key>DefaultValue</key>
				<string>YES</string>
				<key>Name</key>
				<string>CLANG_ANALYZER_MALLOC</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
			<dict>
				<key>Category</key>
				<string>SACheckers</string>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array>
						<string>-Xclang</string>
						<string>-analyzer-disable-checker</string>
						<string>-Xclang</string>
						<string>unix.Malloc</string>
						<string>-Xclang</string>
						<string>-analyzer-disable-checker</string>
						<string>-Xclang</string>
						<string>unix.MallocSizeof</string>
						<string>-Xclang</string>
						<string>-analyzer-disable-checker</string>
						<string>-Xclang</string>
						<string>unix.MismatchedDeallocator</string>
						<string>-Xclang</string>
						<string>-analyzer-disable-checker</string>
						<string>-Xclang</string>
						<string>cplusplus.NewDelete</string>
					</array>
					<key>YES</key>
					<array/>
				</dict>
				<key>DefaultValue</key>
				<string>$(CLANG_ANALYZER_MALLOC)</string>
				<key>Name</key>
				<string>CLANG_ANALYZER_MEMORY_MANAGEMENT</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
			<dict>
				<key>Category</key>
				<string>SAObjCCheckers</string>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array>
						<string>-Xclang</string>
						<string>-analyzer-disable-checker</string>
						<string>-Xclang</string>
						<string>osx.cocoa.RetainCount</string>
						<string>-Xclang</string>
						<string>-analyzer-disable-checker</string>
						<string>-Xclang</string>
						<string>osx.cocoa.ClassRelease</string>
					</array>
					<key>YES</key>
					<array/>
				</dict>
				<key>DefaultValue</key>
				<string>YES</string>
				<key>Name</key>
				<string>CLANG_ANALYZER_OBJC_RETAIN_COUNT</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
			<dict>
				<key>Category</key>
				<string>SAObjCCheckers</string>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array>
						<string>-Xclang</string>
						<string>-analyzer-disable-checker</string>
						<string>-Xclang</string>
						<string>osx.cocoa.AtSync</string>
					</array>
					<key>YES</key>
					<array/>
				</dict>
				<key>DefaultValue</key>
				<string>YES</string>
				<key>Name</key>
				<string>CLANG_ANALYZER_OBJC_ATSYNC</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
			<dict>
				<key>Category</key>
				<string>SAObjCCheckers</string>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array>
						<string>-Xclang</string>
						<string>-analyzer-disable-checker</string>
						<string>-Xclang</string>
						<string>osx.cocoa.Dealloc</string>
					</array>
					<key>YES</key>
					<array/>
				</dict>
				<key>DefaultValue</key>
				<string>YES</string>
				<key>Name</key>
				<string>CLANG_ANALYZER_OBJC_DEALLOC</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
			<dict>
				<key>Category</key>
				<string>SAAppleAPICheckers</string>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array>
						<string>-Xclang</string>
						<string>-analyzer-disable-checker</string>
						<string>-Xclang</string>
						<string>osx.API</string>
					</array>
					<key>YES</key>
					<array/>
				</dict>
				<key>DefaultValue</key>
				<string>YES</string>
				<key>Name</key>
				<string>CLANG_ANALYZER_GCD</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
			<dict>
				<key>Category</key>
				<string>SACheckers</string>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array>
						<string>-Xclang</string>
						<string>-analyzer-disable-checker</string>
						<string>-Xclang</string>
						<string>nullability</string>
					</array>
					<key>YES</key>
					<array/>
					<key>YES_NONAGGRESSIVE</key>
					<array>
						<string>-Xclang</string>
						<string>-analyzer-config</string>
						<string>-Xclang</string>
						<string>nullability:NoDiagnoseCallsToSystemHeaders=true</string>
					</array>
				</dict>
				<key>DefaultValue</key>
				<string>YES_NONAGGRESSIVE</string>
				<key>Name</key>
				<string>CLANG_ANALYZER_NONNULL</string>
				<key>Type</key>
				<string>Enumeration</string>
				<key>Values</key>
				<array>
					<string>YES</string>
					<string>YES_NONAGGRESSIVE</string>
					<string>NO</string>
				</array>
			</dict>
			<dict>
				<key>Category</key>
				<string>SACheckers</string>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array>
						<string>-Xclang</string>
						<string>-analyzer-disable-checker</string>
						<string>-Xclang</string>
						<string>cplusplus.Move</string>
					</array>
					<key>YES</key>
					<array>
						<string>-Xclang</string>
						<string>-analyzer-config</string>
						<string>-Xclang</string>
						<string>cplusplus.Move:WarnOn=KnownsOnly</string>
					</array>
					<key>YES_AGGRESSIVE</key>
					<array/>
				</dict>
				<key>DefaultValue</key>
				<string>YES_AGGRESSIVE</string>
				<key>Name</key>
				<string>CLANG_ANALYZER_USE_AFTER_MOVE</string>
				<key>Type</key>
				<string>Enumeration</string>
				<key>Values</key>
				<array>
					<string>YES_AGGRESSIVE</string>
					<string>YES</string>
					<string>NO</string>
				</array>
			</dict>
			<dict>
				<key>Category</key>
				<string>SAAppleAPICheckers</string>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array>
						<string>-Xclang</string>
						<string>-analyzer-disable-checker</string>
						<string>-Xclang</string>
						<string>osx.NumberObjectConversion</string>
					</array>
					<key>YES</key>
					<array/>
					<key>YES_AGGRESSIVE</key>
					<array>
						<string>-Xclang</string>
						<string>-analyzer-config</string>
						<string>-Xclang</string>
						<string>osx.NumberObjectConversion:Pedantic=true</string>
					</array>
				</dict>
				<key>DefaultValue</key>
				<string>YES</string>
				<key>Name</key>
				<string>CLANG_ANALYZER_NUMBER_OBJECT_CONVERSION</string>
				<key>SupportedVersionRanges</key>
				<array>
					<string>802.0.0</string>
				</array>
				<key>Type</key>
				<string>Enumeration</string>
				<key>Values</key>
				<array>
					<string>YES_AGGRESSIVE</string>
					<string>YES</string>
					<string>NO</string>
				</array>
			</dict>
			<dict>
				<key>Category</key>
				<string>SAAppleAPICheckers</string>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array/>
					<key>YES</key>
					<array>
						<string>-Xclang</string>
						<string>-analyzer-checker</string>
						<string>-Xclang</string>
						<string>optin.osx.cocoa.localizability.NonLocalizedStringChecker</string>
					</array>
				</dict>
				<key>DefaultValue</key>
				<string>NO</string>
				<key>Name</key>
				<string>CLANG_ANALYZER_LOCALIZABILITY_NONLOCALIZED</string>
				<key>Type</key>
				<string>Enumeration</string>
				<key>Values</key>
				<array>
					<string>YES</string>
					<string>NO</string>
				</array>
			</dict>
			<dict>
				<key>Category</key>
				<string>SAAppleAPICheckers</string>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array/>
					<key>YES</key>
					<array>
						<string>-Xclang</string>
						<string>-analyzer-checker</string>
						<string>-Xclang</string>
						<string>optin.osx.cocoa.localizability.EmptyLocalizationContextChecker</string>
					</array>
				</dict>
				<key>DefaultValue</key>
				<string>NO</string>
				<key>Name</key>
				<string>CLANG_ANALYZER_LOCALIZABILITY_EMPTY_CONTEXT</string>
				<key>Type</key>
				<string>Enumeration</string>
				<key>Values</key>
				<array>
					<string>YES</string>
					<string>NO</string>
				</array>
			</dict>
			<dict>
				<key>Category</key>
				<string>SAAppleAPICheckers</string>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array/>
					<key>YES</key>
					<array>
						<string>-Xclang</string>
						<string>-analyzer-checker</string>
						<string>-Xclang</string>
						<string>optin.performance.GCDAntipattern</string>
					</array>
				</dict>
				<key>DefaultValue</key>
				<string>NO</string>
				<key>Name</key>
				<string>CLANG_ANALYZER_GCD_PERFORMANCE</string>
				<key>Type</key>
				<string>Enumeration</string>
				<key>Values</key>
				<array>
					<string>YES</string>
					<string>NO</string>
				</array>
			</dict>
			<dict>
				<key>Category</key>
				<string>SAObjCCheckers</string>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array>
						<string>-Xclang</string>
						<string>-analyzer-disable-checker</string>
						<string>-Xclang</string>
						<string>osx.cocoa.SelfInit</string>
					</array>
					<key>YES</key>
					<array/>
				</dict>
				<key>DefaultValue</key>
				<string>YES</string>
				<key>FileTypes</key>
				<array>
					<string>sourcecode.c.objc</string>
					<string>sourcecode.cpp.objcpp</string>
				</array>
				<key>Name</key>
				<string>CLANG_ANALYZER_OBJC_SELF_INIT</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
			<dict>
				<key>Category</key>
				<string>SAAppleAPICheckers</string>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array>
						<string>-Xclang</string>
						<string>-analyzer-config</string>
						<string>-Xclang</string>
						<string>osx.cocoa.RetainCount:CheckOSObject=false</string>
					</array>
					<key>YES</key>
					<array/>
				</dict>
				<key>DefaultValue</key>
				<string>YES</string>
				<key>Name</key>
				<string>CLANG_ANALYZER_LIBKERN_RETAIN_COUNT</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
			<dict>
				<key>Category</key>
				<string>SASecurityCheckers</string>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array>
						<string>-Xclang</string>
						<string>-analyzer-disable-checker</string>
						<string>-Xclang</string>
						<string>osx.SecKeychainAPI</string>
					</array>
					<key>YES</key>
					<array/>
				</dict>
				<key>DefaultValue</key>
				<string>YES</string>
				<key>FileTypes</key>
				<array>
					<string>sourcecode.c.objc</string>
					<string>sourcecode.cpp.objcpp</string>
				</array>
				<key>Name</key>
				<string>CLANG_ANALYZER_SECURITY_KEYCHAIN_API</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
			<dict>
				<key>Category</key>
				<string>SASecurityCheckers</string>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array/>
					<key>YES</key>
					<array>
						<string>-Xclang</string>
						<string>-analyzer-checker</string>
						<string>-Xclang</string>
						<string>security.FloatLoopCounter</string>
					</array>
				</dict>
				<key>DefaultValue</key>
				<string>NO</string>
				<key>Name</key>
				<string>CLANG_ANALYZER_SECURITY_FLOATLOOPCOUNTER</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
			<dict>
				<key>Category</key>
				<string>SASecurityCheckers</string>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array>
						<string>-Xclang</string>
						<string>-analyzer-disable-checker</string>
						<string>-Xclang</string>
						<string>security.insecureAPI.UncheckedReturn</string>
					</array>
					<key>YES</key>
					<array>
						<string>-Xclang</string>
						<string>-analyzer-checker</string>
						<string>-Xclang</string>
						<string>security.insecureAPI.UncheckedReturn</string>
					</array>
				</dict>
				<key>DefaultValue</key>
				<string>YES</string>
				<key>Name</key>
				<string>CLANG_ANALYZER_SECURITY_INSECUREAPI_UNCHECKEDRETURN</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
			<dict>
				<key>Category</key>
				<string>SASecurityCheckers</string>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array>
						<string>-Xclang</string>
						<string>-analyzer-disable-checker</string>
						<string>-Xclang</string>
						<string>security.insecureAPI.getpw</string>
						<string>-Xclang</string>
						<string>-analyzer-disable-checker</string>
						<string>-Xclang</string>
						<string>security.insecureAPI.gets</string>
					</array>
					<key>YES</key>
					<array>
						<string>-Xclang</string>
						<string>-analyzer-checker</string>
						<string>-Xclang</string>
						<string>security.insecureAPI.getpw</string>
						<string>-Xclang</string>
						<string>-analyzer-checker</string>
						<string>-Xclang</string>
						<string>security.insecureAPI.gets</string>
					</array>
				</dict>
				<key>DefaultValue</key>
				<string>YES</string>
				<key>Name</key>
				<string>CLANG_ANALYZER_SECURITY_INSECUREAPI_GETPW_GETS</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
			<dict>
				<key>Category</key>
				<string>SASecurityCheckers</string>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array>
						<string>-Xclang</string>
						<string>-analyzer-disable-checker</string>
						<string>-Xclang</string>
						<string>security.insecureAPI.mkstemp</string>
						<string>-Xclang</string>
						<string>-analyzer-disable-checker</string>
						<string>-Xclang</string>
						<string>security.insecureAPI.mktemp</string>
					</array>
					<key>YES</key>
					<array>
						<string>-Xclang</string>
						<string>-analyzer-checker</string>
						<string>-Xclang</string>
						<string>security.insecureAPI.mkstemp</string>
						<string>-Xclang</string>
						<string>-analyzer-checker</string>
						<string>-Xclang</string>
						<string>security.insecureAPI.mktemp</string>
					</array>
				</dict>
				<key>DefaultValue</key>
				<string>YES</string>
				<key>Name</key>
				<string>CLANG_ANALYZER_SECURITY_INSECUREAPI_MKSTEMP</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
			<dict>
				<key>Category</key>
				<string>SASecurityCheckers</string>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array>
						<string>-Xclang</string>
						<string>-analyzer-disable-checker</string>
						<string>-Xclang</string>
						<string>security.insecureAPI.rand</string>
					</array>
					<key>YES</key>
					<array>
						<string>-Xclang</string>
						<string>-analyzer-checker</string>
						<string>-Xclang</string>
						<string>security.insecureAPI.rand</string>
					</array>
				</dict>
				<key>DefaultValue</key>
				<string>NO</string>
				<key>Name</key>
				<string>CLANG_ANALYZER_SECURITY_INSECUREAPI_RAND</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
			<dict>
				<key>Category</key>
				<string>SASecurityCheckers</string>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array>
						<string>-Xclang</string>
						<string>-analyzer-disable-checker</string>
						<string>-Xclang</string>
						<string>security.insecureAPI.strcpy</string>
					</array>
					<key>YES</key>
					<array>
						<string>-Xclang</string>
						<string>-analyzer-checker</string>
						<string>-Xclang</string>
						<string>security.insecureAPI.strcpy</string>
					</array>
				</dict>
				<key>DefaultValue</key>
				<string>NO</string>
				<key>Name</key>
				<string>CLANG_ANALYZER_SECURITY_INSECUREAPI_STRCPY</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
			<dict>
				<key>Category</key>
				<string>SASecurityCheckers</string>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array>
						<string>-Xclang</string>
						<string>-analyzer-disable-checker</string>
						<string>-Xclang</string>
						<string>security.insecureAPI.vfork</string>
					</array>
					<key>YES</key>
					<array>
						<string>-Xclang</string>
						<string>-analyzer-checker</string>
						<string>-Xclang</string>
						<string>security.insecureAPI.vfork</string>
					</array>
				</dict>
				<key>DefaultValue</key>
				<string>YES</string>
				<key>Name</key>
				<string>CLANG_ANALYZER_SECURITY_INSECUREAPI_VFORK</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
			<dict>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array/>
					<key>YES</key>
					<array>
						<string>-Xclang</string>
						<string>-analyzer-checker</string>
						<string>-Xclang</string>
						<string>core.experimental.Overflow</string>
						<string>-Xclang</string>
						<string>-analyzer-checker</string>
						<string>-Xclang</string>
						<string>security.experimental.ArrayBoundV2</string>
						<string>-Xclang</string>
						<string>-analyzer-max-loop</string>
						<string>-Xclang</string>
						<string>100</string>
					</array>
				</dict>
				<key>DefaultValue</key>
				<string>NO</string>
				<key>Name</key>
				<string>CLANG_ANALYZER_SECURITY_BUFFER_OVERFLOW_EXPERIMENTAL</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
			<dict>
				<key>CommandLineArgs</key>
				<array>
					<string>-Xclang</string>
					<string>-analyzer-checker</string>
					<string>-Xclang</string>
					<string>$(value)</string>
				</array>
				<key>FileTypes</key>
				<array>
					<string>sourcecode.c.c</string>
					<string>sourcecode.c.objc</string>
					<string>sourcecode.cpp.cpp</string>
					<string>sourcecode.cpp.objcpp</string>
				</array>
				<key>Name</key>
				<string>CLANG_ANALYZER_OTHER_CHECKERS</string>
				<key>Type</key>
				<string>StringList</string>
			</dict>
			<dict>
				<key>CommandLineArgs</key>
				<array>
					<string>-Xclang</string>
					<string>$(value)</string>
				</array>
				<key>FileTypes</key>
				<array>
					<string>sourcecode.c.c</string>
					<string>sourcecode.c.objc</string>
					<string>sourcecode.cpp.cpp</string>
					<string>sourcecode.cpp.objcpp</string>
				</array>
				<key>Name</key>
				<string>CLANG_ANALYZER_OTHER_FLAGS</string>
				<key>Type</key>
				<string>StringList</string>
			</dict>
		</array>
		<key>OutputDir</key>
		<string>$(CLANG_ANALYZER_OUTPUT_DIR)/StaticAnalyzer/$(PROJECT_NAME)/$(TARGET_NAME)/$(CURRENT_VARIANT)/$(CURRENT_ARCH)</string>
		<key>OutputFileExtension</key>
		<string>plist</string>
		<key>OutputsAreProducts</key>
		<string>YES</string>
		<key>ProgressDescription</key>
		<string>Analyzing$(StaticAnalyzerModeNameDescription) $(CommandProgressByType) source files</string>
		<key>RuleName</key>
		<string>Analyze$(CLANG_STATIC_ANALYZER_MODE_ACTION_$(CLANG_STATIC_ANALYZER_MODE)) $(InputFile) $(CURRENT_VARIANT) $(CURRENT_ARCH)</string>
		<key>ShowInCompilerSelectionPopup</key>
		<string>NO</string>
		<key>ShowOnlySelfDefinedProperties</key>
		<string>YES</string>
		<key>SourceFileOption</key>
		<string>--analyze</string>
		<key>SupportsAnalyzeFile</key>
		<string>YES</string>
		<key>Type</key>
		<string>Compiler</string>
	</dict>
	<dict>
		<key>Architectures</key>
		<array>
			<string>i386</string>
			<string>x86_64</string>
			<string>armv6</string>
			<string>armv7</string>
		</array>
		<key>BasedOn</key>
		<string>com.apple.compilers.llvm.clang.1_0</string>
		<key>CommandResultsPostprocessor</key>
		<string>XCClangResultsPostprocessor</string>
		<key>Description</key>
		<string>Apple Clang ObjC Migrator</string>
		<key>ExecPath</key>
		<string>$(CLANG)</string>
		<key>FileTypes</key>
		<array>
			<string>sourcecode.c.objc</string>
			<string>sourcecode.cpp.objcpp</string>
		</array>
		<key>Identifier</key>
		<string>com.apple.compilers.llvm.clang.1_0.migrator</string>
		<key>IsAbstract</key>
		<string>YES</string>
		<key>Name</key>
		<string>ObjC Migrator</string>
		<key>Options</key>
		<array>
			<dict>
				<key>DefaultValue</key>
				<string>clang</string>
				<key>Name</key>
				<string>CLANG</string>
				<key>Type</key>
				<string>Path</string>
			</dict>
			<dict>
				<key>CommandLineArgs</key>
				<array/>
				<key>Name</key>
				<string>CLANG_INDEX_STORE_ENABLE</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
			<dict>
				<key>Category</key>
				<string>Modernizer</string>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array/>
					<key>YES</key>
					<array>
						<string>-objcmt-migrate-readwrite-property</string>
					</array>
				</dict>
				<key>DefaultValue</key>
				<string>YES</string>
				<key>Description</key>
				<string>Infer readwrite properties from a getter and setter method.</string>
				<key>DisplayName</key>
				<string>Infer readwrite properties</string>
				<key>Name</key>
				<string>CLANG_MIGRATOR_READWRITE_PROPERTY</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
			<dict>
				<key>Category</key>
				<string>Modernizer</string>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array/>
					<key>YES</key>
					<array>
						<string>-objcmt-migrate-readonly-property</string>
					</array>
				</dict>
				<key>DefaultValue</key>
				<string>YES</string>
				<key>Description</key>
				<string>Infer readonly properties from getter methods.</string>
				<key>DisplayName</key>
				<string>Infer readonly properties</string>
				<key>Name</key>
				<string>CLANG_MIGRATOR_READONLY_PROPERTY</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
			<dict>
				<key>Category</key>
				<string>Modernizer</string>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array/>
					<key>YES</key>
					<array>
						<string>-objcmt-migrate-annotation</string>
					</array>
				</dict>
				<key>DefaultValue</key>
				<string>YES</string>
				<key>Description</key>
				<string>Add attribute annotations to properties and methods.</string>
				<key>DisplayName</key>
				<string>Add attribute annotations</string>
				<key>Name</key>
				<string>CLANG_MIGRATOR_ANNOTATIONS</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
			<dict>
				<key>Category</key>
				<string>Modernizer</string>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array/>
					<key>YES</key>
					<array>
						<string>-objcmt-migrate-instancetype</string>
					</array>
				</dict>
				<key>DefaultValue</key>
				<string>YES</string>
				<key>Description</key>
				<string>Infer `instancetype` for method result type instead of `id`.</string>
				<key>DisplayName</key>
				<string>Infer instancetype for method result type</string>
				<key>Name</key>
				<string>CLANG_MIGRATOR_INSTANCE_TYPE</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
			<dict>
				<key>Category</key>
				<string>Modernizer</string>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array/>
					<key>YES</key>
					<array>
						<string>-objcmt-migrate-ns-macros</string>
					</array>
				</dict>
				<key>DefaultValue</key>
				<string>YES</string>
				<key>Description</key>
				<string>Use `NS_ENUM`/`NS_OPTIONS` macros for enumerators.</string>
				<key>DisplayName</key>
				<string>Use NS_ENUM/NS_OPTIONS macros</string>
				<key>Name</key>
				<string>CLANG_MIGRATOR_NSENUM_MACROS</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
			<dict>
				<key>Category</key>
				<string>Modernizer</string>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array/>
					<key>YES</key>
					<array>
						<string>-objcmt-migrate-protocol-conformance</string>
					</array>
				</dict>
				<key>DefaultValue</key>
				<string>NO</string>
				<key>Description</key>
				<string>Infer protocol conformance from the interface methods.</string>
				<key>DisplayName</key>
				<string>Infer protocol conformance</string>
				<key>Name</key>
				<string>CLANG_MIGRATOR_PROTOCOL_CONFORMANCE</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
			<dict>
				<key>Category</key>
				<string>Modernizer</string>
				<key>CommandLineArgs</key>
				<dict>
					<key>NS_NONATOMIC_IOSONLY</key>
					<array>
						<string>-objcmt-ns-nonatomic-iosonly</string>
					</array>
					<key>atomic</key>
					<array>
						<string>-objcmt-atomic-property</string>
					</array>
					<key>nonatomic</key>
					<array/>
				</dict>
				<key>DefaultValue</key>
				<string>NS_NONATOMIC_IOSONLY</string>
				<key>Description</key>
				<string>Choose the atomicity of the inferred properties.</string>
				<key>DisplayName</key>
				<string>Atomicity of inferred properties</string>
				<key>Name</key>
				<string>CLANG_MIGRATOR_PROPERTY_ATOMICITY</string>
				<key>Type</key>
				<string>Enumeration</string>
				<key>Values</key>
				<array>
					<string>nonatomic</string>
					<string>atomic</string>
					<string>NS_NONATOMIC_IOSONLY</string>
				</array>
			</dict>
			<dict>
				<key>Category</key>
				<string>Modernizer</string>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array/>
					<key>YES</key>
					<array>
						<string>-objcmt-white-list-dir-path=$(TARGET_BUILD_DIR)/$(PUBLIC_HEADERS_FOLDER_PATH)</string>
					</array>
				</dict>
				<key>DefaultValue</key>
				<string>YES</string>
				<key>Description</key>
				<string>Only modify public headers of a target.</string>
				<key>DisplayName</key>
				<string>Only modify public headers</string>
				<key>Name</key>
				<string>CLANG_MIGRATOR_PUBLIC_HEADERS_ONLY</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
			<dict>
				<key>Category</key>
				<string>Modernizer</string>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array/>
					<key>YES</key>
					<array>
						<string>-objcmt-migrate-literals</string>
						<string>-Qunused-arguments</string>
					</array>
				</dict>
				<key>DefaultValue</key>
				<string>YES</string>
				<key>Description</key>
				<string>Enable migration to modern ObjC literals syntax.</string>
				<key>DisplayName</key>
				<string>ObjC literals</string>
				<key>Name</key>
				<string>CLANG_MIGRATOR_OBJC_LITERALS</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
			<dict>
				<key>Category</key>
				<string>Modernizer</string>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array/>
					<key>YES</key>
					<array>
						<string>-objcmt-migrate-property-dot-syntax</string>
					</array>
				</dict>
				<key>DefaultValue</key>
				<string>YES</string>
				<key>Description</key>
				<string>Enable migration of setter/getter messages to property-dot syntax.</string>
				<key>DisplayName</key>
				<string>ObjC property-dot syntax</string>
				<key>Name</key>
				<string>CLANG_MIGRATOR_PROPERTY_DOT_SYNTAX</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
			<dict>
				<key>Category</key>
				<string>Modernizer</string>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array/>
					<key>YES</key>
					<array>
						<string>-objcmt-migrate-subscripting</string>
						<string>-Qunused-arguments</string>
					</array>
				</dict>
				<key>DefaultValue</key>
				<string>YES</string>
				<key>Description</key>
				<string>Enable migration to modern ObjC subscripting syntax.</string>
				<key>DisplayName</key>
				<string>ObjC subscripting</string>
				<key>Name</key>
				<string>CLANG_MIGRATOR_OBJC_SUBSCRIPTING</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
			<dict>
				<key>Category</key>
				<string>Modernizer</string>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array/>
					<key>YES</key>
					<array>
						<string>-objcmt-migrate-designated-init</string>
						<string>-Qunused-arguments</string>
					</array>
				</dict>
				<key>DefaultValue</key>
				<string>YES</string>
				<key>Description</key>
				<string>Infer `NS_DESIGNATED_INITIALIZER` for designated initializer methods.</string>
				<key>DisplayName</key>
				<string>Infer designated initializer methods</string>
				<key>Name</key>
				<string>CLANG_MIGRATOR_OBJC_DESIGNATED_INIT</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
		</array>
		<key>OutputDir</key>
		<string>$(TEMP_DIR)/Migrator</string>
		<key>OutputFileExtension</key>
		<string>remap</string>
		<key>OutputsAreProducts</key>
		<string>YES</string>
		<key>ShowInCompilerSelectionPopup</key>
		<string>NO</string>
		<key>ShowOnlySelfDefinedProperties</key>
		<string>YES</string>
		<key>SourceFileOption</key>
		<string>--migrate</string>
		<key>Type</key>
		<string>Compiler</string>
	</dict>
	<dict>
		<key>Architectures</key>
		<array>
			<string>i386</string>
			<string>x86_64</string>
			<string>armv6</string>
			<string>armv7</string>
		</array>
		<key>BasedOn</key>
		<string>com.apple.compilers.llvm.clang.1_0</string>
		<key>CommandResultsPostprocessor</key>
		<string>XCClangResultsPostprocessor</string>
		<key>Description</key>
		<string>Apple Clang XCTest Migrator</string>
		<key>ExecPath</key>
		<string>$(CLANG)</string>
		<key>FileTypes</key>
		<array>
			<string>sourcecode.c.objc</string>
			<string>sourcecode.cpp.objcpp</string>
		</array>
		<key>Identifier</key>
		<string>com.apple.compilers.llvm.clang.1_0.migrator.xctest</string>
		<key>IsAbstract</key>
		<string>YES</string>
		<key>Name</key>
		<string>XCTest Migrator</string>
		<key>Options</key>
		<array>
			<dict>
				<key>DefaultValue</key>
				<string>clang</string>
				<key>Name</key>
				<string>CLANG</string>
				<key>Type</key>
				<string>Path</string>
			</dict>
			<dict>
				<key>CommandLineArgs</key>
				<array/>
				<key>Name</key>
				<string>CLANG_INDEX_STORE_ENABLE</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
		</array>
		<key>OutputDir</key>
		<string>$(TEMP_DIR)/Migrator</string>
		<key>OutputFileExtension</key>
		<string>remap</string>
		<key>OutputsAreProducts</key>
		<string>YES</string>
		<key>ShowInCompilerSelectionPopup</key>
		<string>NO</string>
		<key>ShowOnlySelfDefinedProperties</key>
		<string>YES</string>
		<key>SourceFileOption</key>
		<string>--migrate-xct</string>
		<key>Type</key>
		<string>Compiler</string>
	</dict>
	<dict>
		<key>BasedOn</key>
		<string>com.apple.compilers.llvm.clang.1_0</string>
		<key>Description</key>
		<string>Apple Clang AST Builder 9.0</string>
		<key>FileTypes</key>
		<array>
			<string>sourcecode.c.c</string>
			<string>sourcecode.c.objc</string>
			<string>sourcecode.cpp.cpp</string>
			<string>sourcecode.cpp.objcpp</string>
		</array>
		<key>Identifier</key>
		<string>com.apple.compilers.llvm.clang.1_0.astbuilder</string>
		<key>IsAbstract</key>
		<string>YES</string>
		<key>Name</key>
		<string>AST Builder</string>
		<key>OutputFileExtension</key>
		<string>ast</string>
		<key>OverridingProperties</key>
		<dict>
			<key>CLANG_RETAIN_COMMENTS_FROM_SYSTEM_HEADERS</key>
			<string>YES</string>
			<key>CLEAN_PRECOMPS</key>
			<string>NO</string>
			<key>ENABLE_HEADER_DEPENDENCIES</key>
			<string>YES</string>
			<key>SHARED_PRECOMPS_DIR</key>
			<string>$(INDEX_PRECOMPS_DIR)</string>
		</dict>
		<key>PrunePrecompiledHeaderCache</key>
		<string>NO</string>
		<key>RuleName</key>
		<string>Build AST from $(InputFile)</string>
		<key>ShowInCompilerSelectionPopup</key>
		<string>NO</string>
		<key>SourceFileOption</key>
		<string>-fsyntax-only</string>
		<key>Type</key>
		<string>Compiler</string>
	</dict>
</array>
</plist>
