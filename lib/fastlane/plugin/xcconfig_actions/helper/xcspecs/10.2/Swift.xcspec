<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<array>
	<dict>
		<key>Architectures</key>
		<array>
			<string>x86_64</string>
			<string>i386</string>
			<string>arm64</string>
			<string>armv7</string>
			<string>armv7s</string>
		</array>
		<key>BuiltinJambaseRuleName</key>
		<string>ProcessSwift</string>
		<key>Class</key>
		<string>XCCompilerSpecificationSwift</string>
		<key>CommandOutputParser</key>
		<string>XCSwiftCommandOutputParser</string>
		<key>Description</key>
		<string>Compiles Swift source code into object files.</string>
		<key>ExecDescription</key>
		<string>Compile Swift source files</string>
		<key>ExecPath</key>
		<string>$(SWIFT_EXEC)</string>
		<key>Identifier</key>
		<string>com.apple.xcode.tools.swift.compiler</string>
		<key>InputFileGroupings</key>
		<array>
			<string>tool</string>
		</array>
		<key>InputFileTypes</key>
		<array>
			<string>sourcecode.swift</string>
		</array>
		<key>IsAbstract</key>
		<string>NO</string>
		<key>LanguageVersionDisplayNames</key>
		<dict>
			<key>3.0</key>
			<string>Swift 3 (unsupported)</string>
			<key>4.0</key>
			<string>Swift 4</string>
			<key>4.2</key>
			<string>Swift 4.2</string>
			<key>5.0</key>
			<string>Swift 5</string>
		</dict>
		<key>Name</key>
		<string>Swift Compiler</string>
		<key>OptionConditionFlavors</key>
		<array>
			<string>arch</string>
			<string>sdk</string>
		</array>
		<key>Options</key>
		<array>
			<dict>
				<key>DefaultValue</key>
				<string>swiftc</string>
				<key>Name</key>
				<string>SWIFT_EXEC</string>
				<key>Type</key>
				<string>Path</string>
			</dict>
			<dict>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array/>
					<key>YES</key>
					<array>
						<string>-parse-as-library</string>
					</array>
				</dict>
				<key>DefaultValue</key>
				<string>NO</string>
				<key>Name</key>
				<string>SWIFT_LIBRARIES_ONLY</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
			<dict>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array/>
					<key>YES</key>
					<array>
						<string>-incremental</string>
					</array>
				</dict>
				<key>DefaultValue</key>
				<string>YES</string>
				<key>Name</key>
				<string>SWIFT_ENABLE_INCREMENTAL_COMPILATION</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
			<dict>
				<key>Category</key>
				<string>General</string>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array>
						<string>-disable-bridging-pch</string>
					</array>
					<key>YES</key>
					<array/>
				</dict>
				<key>DefaultValue</key>
				<string>YES</string>
				<key>Description</key>
				<string>Generate a precompiled header for the Objective-C bridging header, if used, in order to reduce overall build times.</string>
				<key>DisplayName</key>
				<string>Precompile Bridging Header</string>
				<key>Name</key>
				<string>SWIFT_PRECOMPILE_BRIDGING_HEADER</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
			<dict>
				<key>DefaultValue</key>
				<string>YES</string>
				<key>Name</key>
				<string>SWIFT_USE_PARALLEL_WHOLE_MODULE_OPTIMIZATION</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
			<dict>
				<key>DefaultValue</key>
				<string>YES</string>
				<key>Name</key>
				<string>SWIFT_USE_PARALLEL_WMO_TARGETS</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
			<dict>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array/>
					<key>YES</key>
					<string>-whole-module-optimization</string>
				</dict>
				<key>DefaultValue</key>
				<string>NO</string>
				<key>Name</key>
				<string>SWIFT_WHOLE_MODULE_OPTIMIZATION</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
			<dict>
				<key>DefaultValue</key>
				<string></string>
				<key>Name</key>
				<string>SWIFT_LIBRARY_PATH</string>
				<key>Type</key>
				<string>Path</string>
			</dict>
			<dict>
				<key>CommandLineFlag</key>
				<string>-resource-dir</string>
				<key>Name</key>
				<string>SWIFT_RESOURCE_DIR</string>
				<key>Type</key>
				<string>Path</string>
			</dict>
			<dict>
				<key>CommandLineArgs</key>
				<array>
					<string>-module-name</string>
					<string>$(value)</string>
				</array>
				<key>DefaultValue</key>
				<string>$(PRODUCT_MODULE_NAME)</string>
				<key>Name</key>
				<string>SWIFT_MODULE_NAME</string>
				<key>Type</key>
				<string>String</string>
			</dict>
			<dict>
				<key>Category</key>
				<string>General</string>
				<key>DefaultValue</key>
				<string></string>
				<key>Description</key>
				<string>Path to the header defining the Objective-C interfaces to be exposed in Swift.</string>
				<key>DisplayName</key>
				<string>Objective-C Bridging Header</string>
				<key>Name</key>
				<string>z </string>
				<key>Type</key>
				<string>String</string>
			</dict>
			<dict>
				<key>Category</key>
				<string>General</string>
				<key>DefaultValue</key>
				<string>$(SWIFT_MODULE_NAME)-Swift.h</string>
				<key>Description</key>
				<string>Name to use for the header that is generated by the Swift compiler for use in `#import` statements in Objective-C.</string>
				<key>DisplayName</key>
				<string>Objective-C Generated Interface Header Name</string>
				<key>Name</key>
				<string>SWIFT_OBJC_INTERFACE_HEADER_NAME</string>
				<key>Type</key>
				<string>String</string>
			</dict>
			<dict>
				<key>Category</key>
				<string>General</string>
				<key>DefaultValue</key>
				<string>YES</string>
				<key>Description</key>
				<string>For frameworks, install the Objective-C compatibility header describing bridged Swift classes into the `PUBLIC_HEADERS_FOLDER_PATH` so they may be accessed from Objective-C code using the framework. Defaults to `YES`.</string>
				<key>DisplayName</key>
				<string>Install Objective-C Compatibility Header</string>
				<key>Name</key>
				<string>SWIFT_INSTALL_OBJC_HEADER</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
			<dict>
				<key>Category</key>
				<string>Code Generation</string>
				<key>CommandLineArgs</key>
				<dict>
					<key>-Owholemodule</key>
					<array>
						<string>-O</string>
						<string>-whole-module-optimization</string>
					</array>
					<key>&lt;&lt;otherwise&gt;&gt;</key>
					<string>$(value)</string>
				</dict>
				<key>DefaultValue</key>
				<string>-O</string>
				<key>DisplayName</key>
				<string>Optimization Level</string>
				<key>Name</key>
				<string>SWIFT_OPTIMIZATION_LEVEL</string>
				<key>Type</key>
				<string>Enumeration</string>
				<key>Values</key>
				<array>
					<string>-Onone</string>
					<string>-O</string>
					<string>-Osize</string>
				</array>
			</dict>
			<dict>
				<key>Category</key>
				<string>Code Generation</string>
				<key>CommandLineArgs</key>
				<dict>
					<key>&lt;&lt;otherwise&gt;&gt;</key>
					<array/>
					<key>wholemodule</key>
					<string>-whole-module-optimization</string>
				</dict>
				<key>Condition</key>
				<string>!$(SWIFT_WHOLE_MODULE_OPTIMIZATION) &amp;&amp; $(SWIFT_OPTIMIZATION_LEVEL) != '-Owholemodule'</string>
				<key>DefaultValue</key>
				<string>singlefile</string>
				<key>DisplayName</key>
				<string>Compilation Mode</string>
				<key>Name</key>
				<string>SWIFT_COMPILATION_MODE</string>
				<key>Type</key>
				<string>Enumeration</string>
				<key>Values</key>
				<array>
					<string>singlefile</string>
					<string>wholemodule</string>
				</array>
			</dict>
			<dict>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<string>-disable-batch-mode</string>
					<key>YES</key>
					<string>-enable-batch-mode</string>
				</dict>
				<key>Condition</key>
				<string>!$(SWIFT_WHOLE_MODULE_OPTIMIZATION) &amp;&amp; $(SWIFT_OPTIMIZATION_LEVEL) != '-Owholemodule' &amp;&amp; $(SWIFT_COMPILATION_MODE) != 'wholemodule'</string>
				<key>DefaultValue</key>
				<string>YES</string>
				<key>Name</key>
				<string>SWIFT_ENABLE_BATCH_MODE</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
			<dict>
				<key>Category</key>
				<string>Code Generation</string>
				<key>CommandLineFlag</key>
				<string>-remove-runtime-asserts</string>
				<key>DefaultValue</key>
				<string>NO</string>
				<key>Description</key>
				<string>Disable runtime safety checks when optimizing.</string>
				<key>DisplayName</key>
				<string>Disable Safety Checks</string>
				<key>Name</key>
				<string>SWIFT_DISABLE_SAFETY_CHECKS</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
			<dict>
				<key>Category</key>
				<string>Code Generation</string>
				<key>CommandLineArgs</key>
				<dict>
					<key>&lt;&lt;otherwise&gt;&gt;</key>
					<string>-enforce-exclusivity=$(value)</string>
					<key>compile-time</key>
					<string>-enforce-exclusivity=unchecked</string>
					<key>debug-only</key>
					<array/>
					<key>full</key>
					<array/>
					<key>none</key>
					<string>-enforce-exclusivity=none</string>
					<key>off</key>
					<string>-enforce-exclusivity=unchecked</string>
					<key>on</key>
					<string>-enforce-exclusivity=checked</string>
				</dict>
				<key>DefaultValue</key>
				<string>on</string>
				<key>Description</key>
				<string>Enforce exclusive access at run-time.</string>
				<key>DisplayName</key>
				<string>Exclusive Access to Memory</string>
				<key>Name</key>
				<string>SWIFT_ENFORCE_EXCLUSIVE_ACCESS</string>
				<key>Type</key>
				<string>Enumeration</string>
				<key>Values</key>
				<array>
					<string>on</string>
					<string>debug-only</string>
					<string>off</string>
				</array>
			</dict>
			<dict>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array/>
					<key>YES</key>
					<array>
						<string>-enforce-exclusivity=unchecked</string>
					</array>
				</dict>
				<key>Condition</key>
				<string>$(SWIFT_OPTIMIZATION_LEVEL) != '-Onone' &amp;&amp; ($(SWIFT_ENFORCE_EXCLUSIVE_ACCESS) == 'full' || $(SWIFT_ENFORCE_EXCLUSIVE_ACCESS) == 'debug-only')</string>
				<key>DefaultValue</key>
				<string>YES</string>
				<key>Name</key>
				<string>__SWIFT_ENFORCE_EXCLUSIVE_ACCESS_DEBUG_ENFORCEMENT_RELEASE</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
			<dict>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array/>
					<key>YES</key>
					<array>
						<string>-enforce-exclusivity=checked</string>
					</array>
				</dict>
				<key>Condition</key>
				<string>$(SWIFT_OPTIMIZATION_LEVEL) == '-Onone' &amp;&amp; ($(SWIFT_ENFORCE_EXCLUSIVE_ACCESS) == 'full' || $(SWIFT_ENFORCE_EXCLUSIVE_ACCESS) == 'debug-only')</string>
				<key>DefaultValue</key>
				<string>YES</string>
				<key>Name</key>
				<string>__SWIFT_ENFORCE_EXCLUSIVE_ACCESS_DEBUG_ENFORCEMENT_DEBUG</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
			<dict>
				<key>Category</key>
				<string>Code Generation</string>
				<key>CommandLineArgs</key>
				<dict>
					<key>Off</key>
					<array>
						<string>-Xfrontend</string>
						<string>-disable-swift3-objc-inference</string>
					</array>
					<key>On</key>
					<array>
						<string>-Xfrontend</string>
						<string>-enable-swift3-objc-inference</string>
						<string>-Xfrontend</string>
						<string>-warn-swift3-objc-inference-minimal</string>
					</array>
				</dict>
				<key>DefaultValue</key>
				<string>Default</string>
				<key>Description</key>
				<string>Control how the Swift compiler infers @objc for declarations.</string>
				<key>DisplayName</key>
				<string>Swift 3 @objc Inference</string>
				<key>Name</key>
				<string>SWIFT_SWIFT3_OBJC_INFERENCE</string>
				<key>Type</key>
				<string>Enumeration</string>
				<key>Values</key>
				<array>
					<string>Default</string>
					<string>On</string>
					<string>Off</string>
				</array>
			</dict>
			<dict>
				<key>DefaultValue</key>
				<string>swiftCore</string>
				<key>Name</key>
				<string>SWIFT_STDLIB</string>
				<key>Type</key>
				<string>String</string>
			</dict>
			<dict>
				<key>Category</key>
				<string>Search Paths</string>
				<key>Description</key>
				<string>A list of paths to be searched by the Swift compiler for additional Swift modules.</string>
				<key>DisplayName</key>
				<string>Import Paths</string>
				<key>FlattenRecursiveSearchPathsInValue</key>
				<string>Yes</string>
				<key>Name</key>
				<string>SWIFT_INCLUDE_PATHS</string>
				<key>Type</key>
				<string>PathList</string>
			</dict>
			<dict>
				<key>FlattenRecursiveSearchPathsInValue</key>
				<string>Yes</string>
				<key>Name</key>
				<string>FRAMEWORK_SEARCH_PATHS</string>
				<key>Type</key>
				<string>PathList</string>
			</dict>
			<dict>
				<key>Category</key>
				<string>Custom Flags</string>
				<key>CommandLineArgs</key>
				<array>
					<string>-D$(value)</string>
				</array>
				<key>Description</key>
				<string>A list of compilation conditions to enable for conditional compilation expressions.</string>
				<key>DisplayName</key>
				<string>Active Compilation Conditions</string>
				<key>Name</key>
				<string>SWIFT_ACTIVE_COMPILATION_CONDITIONS</string>
				<key>Type</key>
				<string>StringList</string>
			</dict>
			<dict>
				<key>Category</key>
				<string>Custom Flags</string>
				<key>CommandLineArgs</key>
				<array>
					<string>$(value)</string>
				</array>
				<key>Description</key>
				<string>A list of additional flags to pass to the Swift compiler.</string>
				<key>DisplayName</key>
				<string>Other Swift Flags</string>
				<key>Name</key>
				<string>OTHER_SWIFT_FLAGS</string>
				<key>Type</key>
				<string>StringList</string>
			</dict>
			<dict>
				<key>CommandLineFlag</key>
				<string>-sdk</string>
				<key>Name</key>
				<string>SDKROOT</string>
				<key>Type</key>
				<string>Path</string>
			</dict>
			<dict>
				<key>CommandLineArgs</key>
				<array>
					<string>-target</string>
					<string>$(CURRENT_ARCH)-apple-$(SWIFT_PLATFORM_TARGET_PREFIX)$(value)$(LLVM_TARGET_TRIPLE_SUFFIX)</string>
				</array>
				<key>DefaultValue</key>
				<string>$($(DEPLOYMENT_TARGET_SETTING_NAME))</string>
				<key>Name</key>
				<string>SWIFT_DEPLOYMENT_TARGET</string>
				<key>Type</key>
				<string>String</string>
			</dict>
			<dict>
				<key>Basic</key>
				<string>YES</string>
				<key>Category</key>
				<string>Language</string>
				<key>DefaultValue</key>
				<string></string>
				<key>Description</key>
				<string></string>
				<key>DisplayName</key>
				<string>Swift Language Version</string>
				<key>Name</key>
				<string>SWIFT_VERSION</string>
				<key>Type</key>
				<string>String</string>
				<key>UIType</key>
				<string>swiftversion</string>
			</dict>
			<dict>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array/>
					<key>YES</key>
					<array>
						<string>-g</string>
					</array>
				</dict>
				<key>Name</key>
				<string>GCC_GENERATE_DEBUGGING_SYMBOLS</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
			<dict>
				<key>CommandLineFlag</key>
				<string>-module-cache-path</string>
				<key>Name</key>
				<string>CLANG_MODULE_CACHE_PATH</string>
				<key>Type</key>
				<string>Path</string>
			</dict>
			<dict>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array/>
					<key>YES</key>
					<array>
						<string>-Xfrontend</string>
						<string>-serialize-debugging-options</string>
					</array>
				</dict>
				<key>DefaultValue</key>
				<string>YES</string>
				<key>Name</key>
				<string>SWIFT_SERIALIZE_DEBUGGING_OPTIONS</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
			<dict>
				<key>AdditionalLinkerArgs</key>
				<dict>
					<key>NO</key>
					<array/>
					<key>YES</key>
					<array>
						<string>-fapplication-extension</string>
					</array>
				</dict>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array/>
					<key>YES</key>
					<array>
						<string>-application-extension</string>
					</array>
				</dict>
				<key>DefaultValue</key>
				<string>$(APPLICATION_EXTENSION_API_ONLY)</string>
				<key>Name</key>
				<string>SWIFT_ENABLE_APP_EXTENSION</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
			<dict>
				<key>AdditionalLinkerArgs</key>
				<dict>
					<key>NO</key>
					<array/>
					<key>YES</key>
					<array>
						<string>-fobjc-link-runtime</string>
					</array>
				</dict>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array/>
					<key>YES</key>
					<array/>
				</dict>
				<key>DefaultValue</key>
				<string>YES</string>
				<key>Name</key>
				<string>SWIFT_LINK_OBJC_RUNTIME</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
			<dict>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array/>
					<key>YES</key>
					<array>
						<string>-update-code</string>
					</array>
				</dict>
				<key>Name</key>
				<string>SWIFT_MIGRATE_CODE</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
			<dict>
				<key>AdditionalLinkerArgs</key>
				<dict>
					<key>NO</key>
					<array/>
					<key>YES</key>
					<array>
						<string>-fprofile-instr-generate</string>
					</array>
				</dict>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array/>
					<key>YES</key>
					<array>
						<string>-profile-coverage-mapping</string>
						<string>-profile-generate</string>
					</array>
				</dict>
				<key>DefaultValue</key>
				<string>NO</string>
				<key>Name</key>
				<string>CLANG_COVERAGE_MAPPING</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
			<dict>
				<key>Category</key>
				<string>General</string>
				<key>CommandLineArgs</key>
				<dict>
					<key>all</key>
					<array/>
					<key>none</key>
					<array>
						<string>-Xfrontend</string>
						<string>-disable-reflection-metadata</string>
					</array>
					<key>without-names</key>
					<array>
						<string>-Xfrontend</string>
						<string>-disable-reflection-names</string>
					</array>
				</dict>
				<key>DefaultValue</key>
				<string>all</string>
				<key>DisplayName</key>
				<string>Reflection Metadata Level</string>
				<key>Name</key>
				<string>SWIFT_REFLECTION_METADATA_LEVEL</string>
				<key>Type</key>
				<string>Enumeration</string>
				<key>Values</key>
				<array>
					<string>all</string>
					<string>without-names</string>
					<string>none</string>
				</array>
			</dict>
			<dict>
				<key>Architectures</key>
				<array>
					<string>arm64</string>
					<string>armv7</string>
					<string>armv7s</string>
					<string>armv7k</string>
				</array>
				<key>CommandLineArgs</key>
				<dict>
					<key>bitcode</key>
					<array>
						<string>-embed-bitcode</string>
					</array>
					<key>marker</key>
					<array>
						<string>-embed-bitcode-marker</string>
					</array>
				</dict>
				<key>Condition</key>
				<string>$(ENABLE_BITCODE) == YES</string>
				<key>DefaultValue</key>
				<string>$(BITCODE_GENERATION_MODE)</string>
				<key>Name</key>
				<string>SWIFT_BITCODE_GENERATION_MODE</string>
				<key>Type</key>
				<string>Enumeration</string>
				<key>Values</key>
				<array>
					<string>marker</string>
					<string>bitcode</string>
				</array>
			</dict>
			<dict>
				<key>AdditionalLinkerArgs</key>
				<dict>
					<key>NO</key>
					<array/>
					<key>YES</key>
					<array>
						<string>-fsanitize=address</string>
					</array>
				</dict>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array/>
					<key>YES</key>
					<array>
						<string>-sanitize=address</string>
					</array>
				</dict>
				<key>DefaultValue</key>
				<string>$(ENABLE_ADDRESS_SANITIZER)</string>
				<key>Name</key>
				<string>SWIFT_ADDRESS_SANITIZER</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
			<dict>
				<key>Architectures</key>
				<array>
					<string>x86_64</string>
					<string>arm64</string>
				</array>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array/>
					<key>YES</key>
					<array>
						<string>-sanitize=thread</string>
					</array>
				</dict>
				<key>DefaultValue</key>
				<string>$(ENABLE_THREAD_SANITIZER)</string>
				<key>Name</key>
				<string>SWIFT_THREAD_SANITIZER</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
			<dict>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array/>
					<key>YES</key>
					<array>
						<string>-enable-testing</string>
					</array>
				</dict>
				<key>DefaultValue</key>
				<string>$(ENABLE_TESTABILITY)</string>
				<key>Name</key>
				<string>SWIFT_ENABLE_TESTABILITY</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
			<dict>
				<key>Category</key>
				<string>Warnings Policies</string>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array/>
					<key>YES</key>
					<array>
						<string>-suppress-warnings</string>
					</array>
				</dict>
				<key>DefaultValue</key>
				<string>NO</string>
				<key>Description</key>
				<string>Don't emit any warnings.</string>
				<key>DisplayName</key>
				<string>Suppress Warnings</string>
				<key>Name</key>
				<string>SWIFT_SUPPRESS_WARNINGS</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
			<dict>
				<key>Category</key>
				<string>Warnings Policies</string>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array/>
					<key>YES</key>
					<array>
						<string>-warnings-as-errors</string>
					</array>
				</dict>
				<key>DefaultValue</key>
				<string>NO</string>
				<key>Description</key>
				<string>Treat all warnings as errors.</string>
				<key>DisplayName</key>
				<string>Treat Warnings as Errors</string>
				<key>Name</key>
				<string>SWIFT_TREAT_WARNINGS_AS_ERRORS</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
			<dict>
				<key>DefaultValue</key>
				<string>$(INDEX_DATA_STORE_DIR)</string>
				<key>Name</key>
				<string>SWIFT_INDEX_STORE_PATH</string>
				<key>Type</key>
				<string>Path</string>
			</dict>
			<dict>
				<key>CommandLineArgs</key>
				<dict>
					<key>NO</key>
					<array/>
					<key>YES</key>
					<array>
						<string>-index-store-path</string>
						<string>$(SWIFT_INDEX_STORE_PATH)</string>
					</array>
				</dict>
				<key>Condition</key>
				<string>$(COMPILER_INDEX_STORE_ENABLE) == YES  ||  ( $(COMPILER_INDEX_STORE_ENABLE) == Default  &amp;&amp;  $(SWIFT_OPTIMIZATION_LEVEL) == '-Onone' )</string>
				<key>DefaultValue</key>
				<string>$(INDEX_ENABLE_DATA_STORE)</string>
				<key>Name</key>
				<string>SWIFT_INDEX_STORE_ENABLE</string>
				<key>Type</key>
				<string>Boolean</string>
			</dict>
		</array>
		<key>ProgressDescription</key>
		<string>Compiling Swift source files</string>
		<key>ShowInCompilerSelectionPopup</key>
		<string>NO</string>
		<key>SupportedLanguageVersions</key>
		<array>
			<string>4.0</string>
			<string>4.2</string>
			<string>5.0</string>
		</array>
		<key>SupportsGenerateAssemblyFile</key>
		<string>YES</string>
		<key>SupportsGeneratePreprocessedFile</key>
		<string>NO</string>
		<key>SynthesizeBuildRule</key>
		<string>YES</string>
		<key>Type</key>
		<string>Compiler</string>
		<key>Vendor</key>
		<string>Apple</string>
		<key>Version</key>
		<string>4.0</string>
	</dict>
</array>
</plist>
